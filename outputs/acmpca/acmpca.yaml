openapi: 3.0.0
servers: []
info:
  title: ACMPCA
  description: AWS CloudFormation Resource Specification
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2023-03-08-stackql-generated
components:
  schemas:
    Certificate:
      type: object
      properties:
        ApiPassthrough:
          type: >-
            [apipassthrough](aws-properties-acmpca-certificate-apipassthrough.md)
          description: >-
            Specifies X\.509 certificate information to be included in the
            issued certificate\. An `APIPassthrough` or `APICSRPassthrough`
            template variant must be selected, or else this parameter is
            ignored\.
        CertificateAuthorityArn:
          type: string
          description: >-
            The Amazon Resource Name \(ARN\) for the private CA issues the
            certificate\.
        CertificateSigningRequest:
          type: string
          description: The certificate signing request \(CSR\) for the certificate\.
        SigningAlgorithm:
          type: string
          description: >-
            The name of the algorithm that will be used to sign the certificate
            to be issued\.    This parameter should not be confused with the
            `SigningAlgorithm` parameter used to sign a CSR in the
            `CreateCertificateAuthority` action\.   The specified signing
            algorithm family \(RSA or ECDSA\) must match the algorithm family of
            the CA's secret key\.
        TemplateArn:
          type: string
          description: >-
            Specifies a custom configuration template to use when issuing a
            certificate\. If this parameter is not provided, AWS Private CA
            defaults to the `EndEntityCertificate/V1` template\. For more
            information about AWS Private CA templates, see [Using
            Templates](https://docs.aws.amazon.com/privateca/latest/userguide/UsingTemplates.html)\.
        Validity:
          type: '[validity](aws-properties-acmpca-certificate-validity.md)'
          description: The period of time during which the certificate will be valid\.
        ValidityNotBefore:
          type: '[validity](aws-properties-acmpca-certificate-validity.md)'
          description: >-
            Information describing the start of the validity period of the
            certificate\. This parameter sets the “Not Before" date for the
            certificate\.   By default, when issuing a certificate, AWS Private
            CA sets the "Not Before" date to the issuance time minus 60
            minutes\. This compensates for clock inconsistencies across computer
            systems\. The `ValidityNotBefore` parameter can be used to customize
            the “Not Before” value\.    Unlike the `Validity` parameter, the
            `ValidityNotBefore` parameter is optional\.   The
            `ValidityNotBefore` value is expressed as an explicit date and time,
            using the `Validity` type value `ABSOLUTE`\.
      required:
        - CertificateAuthorityArn
        - CertificateSigningRequest
        - SigningAlgorithm
        - Validity
    CertificateAuthority:
      type: object
      properties:
        CsrExtensions:
          type: >-
            [csrextensions](aws-properties-acmpca-certificateauthority-csrextensions.md)
          description: >-
            Specifies information to be added to the extension section of the
            certificate signing request \(CSR\)\.
        KeyAlgorithm:
          type: string
          description: >-
            Type of the public key algorithm and size, in bits, of the key pair
            that your CA creates when it issues a certificate\. When you create
            a subordinate CA, you must use a key algorithm supported by the
            parent CA\.
        KeyStorageSecurityStandard:
          type: string
          description: >-
            Specifies a cryptographic key management compliance standard used
            for handling CA keys\.   Default:
            FIPS\_140\_2\_LEVEL\_3\_OR\_HIGHER    *Note:*
            `FIPS_140_2_LEVEL_3_OR_HIGHER` is not supported in the following
            Regions:   + ap\-northeast\-3 + ap\-southeast\-3 When creating a CA
            in these Regions, you must provide `FIPS_140_2_LEVEL_2_OR_HIGHER` as
            the argument for `KeyStorageSecurityStandard`\. Failure to do this
            results in an `InvalidArgsException` with the message, "A
            certificate authority cannot be created in this region with the
            specified security standard\."
        RevocationConfiguration:
          type: >-
            [revocationconfiguration](aws-properties-acmpca-certificateauthority-revocationconfiguration.md)
          description: >-
            Certificate revocation information used by the
            [CreateCertificateAuthority](https://docs.aws.amazon.com/privateca/latest/APIReference/API_CreateCertificateAuthority.html)
            and
            [UpdateCertificateAuthority](https://docs.aws.amazon.com/privateca/latest/APIReference/API_UpdateCertificateAuthority.html)
            actions\. Your private certificate authority \(CA\) can configure
            Online Certificate Status Protocol \(OCSP\) support and/or maintain
            a certificate revocation list \(CRL\)\. OCSP returns validation
            information about certificates as requested by clients, and a CRL
            contains an updated list of certificates revoked by your CA\. For
            more information, see
            [RevokeCertificate](https://docs.aws.amazon.com/privateca/latest/APIReference/API_RevokeCertificate.html)
            in the *AWS Private CA API Reference* and [Setting up a certificate
            revocation
            method](https://docs.aws.amazon.com/privateca/latest/userguide/revocation-setup.html)
            in the *AWS Private CA User Guide*\.   The following requirements
            apply to revocation configurations\.   + A configuration disabling
            CRLs or OCSP must contain only the `Enabled=False` parameter, and
            will fail if other parameters such as `CustomCname` or
            `ExpirationInDays` are included\. + In a CRL configuration, the
            `S3BucketName` parameter must conform to the [Amazon S3 bucket
            naming
            rules](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html)\.
            + A configuration containing a custom Canonical Name \(CNAME\)
            parameter for CRLs or OCSP must conform to
            [RFC2396](https://www.ietf.org/rfc/rfc2396.txt) restrictions on the
            use of special characters in a CNAME\.  + In a CRL or OCSP
            configuration, the value of a CNAME parameter must not include a
            protocol prefix such as "http://" or "https://"\.
        SigningAlgorithm:
          type: string
          description: >-
            Name of the algorithm your private CA uses to sign certificate
            requests\.   This parameter should not be confused with the
            `SigningAlgorithm` parameter used to sign certificates when they are
            issued\.
        Subject:
          type: '[subject](aws-properties-acmpca-certificateauthority-subject.md)'
          description: >-
            Structure that contains X\.500 distinguished name information for
            your private CA\.
        Tags:
          type: >-
            list of
            [tag](https://docs.aws.amazon.com/awscloudformation/latest/userguide/aws-properties-resource-tags.html)
          description: >-
            Key\-value pairs that will be attached to the new private CA\. You
            can associate up to 50 tags with a private CA\. For information
            using tags with IAM to manage permissions, see [Controlling Access
            Using IAM
            Tags](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_iam-tags.html)\.
        Type:
          type: string
          description: Type of your private CA\.
        UsageMode:
          type: string
          description: >-
            Specifies whether the CA issues general\-purpose certificates that
            typically require a revocation mechanism, or short\-lived
            certificates that may optionally omit revocation because they expire
            quickly\. Short\-lived certificate validity is limited to seven
            days\.   The default value is GENERAL\_PURPOSE\.
      required:
        - KeyAlgorithm
        - SigningAlgorithm
        - Subject
        - Type
    CertificateAuthorityActivation:
      type: object
      properties:
        Certificate:
          type: string
          description: The Base64 PEM\-encoded certificate authority certificate\.
        CertificateAuthorityArn:
          type: string
          description: The Amazon Resource Name \(ARN\) of your private CA\.
        CertificateChain:
          type: string
          description: >-
            The Base64 PEM\-encoded certificate chain that chains up to the root
            CA certificate that you used to sign your private CA certificate\.
        Status:
          type: string
          description: Status of your private CA\.
      required:
        - Certificate
        - CertificateAuthorityArn
    Permission:
      type: object
      properties:
        Actions:
          type: array
          description: >-
            The private CA actions that can be performed by the designated AWS
            service\. Supported actions are `IssueCertificate`,
            `GetCertificate`, and `ListPermissions`\.
        CertificateAuthorityArn:
          type: string
          description: >-
            The Amazon Resource Number \(ARN\) of the private CA from which the
            permission was issued\.
        Principal:
          type: string
          description: >-
            The AWS service or entity that holds the permission\. At this time,
            the only valid principal is `acm.amazonaws.com`\.
        SourceAccount:
          type: string
          description: The ID of the account that assigned the permission\.
      required:
        - Actions
        - CertificateAuthorityArn
        - Principal
paths: {}
