openapi: 3.0.0
servers: []
info:
  title: AppConfig
  description: AWS CloudFormation Resource Specification
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2023-03-08-stackql-generated
components:
  schemas:
    Application:
      type: object
      properties:
        Description:
          type: string
          description: A description of the application\.
        Name:
          type: string
          description: A name for the application\.
        Tags:
          type: >-
            [list](aws-properties-appconfig-application-tags.md) of
            [tags](aws-properties-appconfig-application-tags.md)
          description: >-
            Metadata to assign to the application\. Tags help organize and
            categorize your AWS AppConfig resources\. Each tag consists of a key
            and an optional value, both of which you define\.
      required:
        - Name
    ConfigurationProfile:
      type: object
      properties:
        ApplicationId:
          type: string
          description: The application ID\.
        Description:
          type: string
          description: A description of the configuration profile\.
        LocationUri:
          type: string
          description: >-
            A URI to locate the configuration\. You can specify the following:  
            + For the AWS AppConfig hosted configuration store and for feature
            flags, specify `hosted`\. + For an AWS Systems Manager Parameter
            Store parameter, specify either the parameter name in the format
            `ssm-parameter://<parameter name>` or the ARN\. + For an AWS Secrets
            Manager secret, specify the URI in the following format:
            `secrets-manager`://<secret name>\. + For an Amazon S3 object,
            specify the URI in the following format: `s3://<bucket>/<objectKey>
            `\. Here is an example:
            `s3://my-bucket/my-app/us-east-1/my-config.json`  + For an SSM
            document, specify either the document name in the format
            `ssm-document://<document name>` or the Amazon Resource Name
            \(ARN\)\.
        Name:
          type: string
          description: A name for the configuration profile\.
        RetrievalRoleArn:
          type: string
          description: >-
            The ARN of an IAM role with permission to access the configuration
            at the specified `LocationUri`\.   A retrieval role ARN is not
            required for configurations stored in the AWS AppConfig hosted
            configuration store\. It is required for all other sources that
            store your configuration\.
        Tags:
          type: >-
            [list](aws-properties-appconfig-configurationprofile-tags.md) of
            [tags](aws-properties-appconfig-configurationprofile-tags.md)
          description: >-
            Metadata to assign to the configuration profile\. Tags help organize
            and categorize your AWS AppConfig resources\. Each tag consists of a
            key and an optional value, both of which you define\.
        Type:
          type: string
          description: >-
            The type of configurations contained in the profile\. AWS AppConfig
            supports `feature flags` and `freeform` configurations\. We
            recommend you create feature flag configurations to enable or
            disable new features and freeform configurations to distribute
            configurations to an application\. When calling this API, enter one
            of the following values for `Type`:   
            `AWS.AppConfig.FeatureFlags`     `AWS.Freeform`
        Validators:
          type: >-
            [list](aws-properties-appconfig-configurationprofile-validators.md)
            of
            [validators](aws-properties-appconfig-configurationprofile-validators.md)
          description: A list of methods for validating the configuration\.
      required:
        - ApplicationId
        - LocationUri
        - Name
    Deployment:
      type: object
      properties:
        ApplicationId:
          type: string
          description: The application ID\.
        ConfigurationProfileId:
          type: string
          description: The configuration profile ID\.
        ConfigurationVersion:
          type: string
          description: >-
            The configuration version to deploy\. If deploying an AWS AppConfig
            hosted configuration version, you can specify either the version
            number or version label\.
        DeploymentStrategyId:
          type: string
          description: The deployment strategy ID\.
        Description:
          type: string
          description: A description of the deployment\.
        EnvironmentId:
          type: string
          description: The environment ID\.
        KmsKeyIdentifier:
          type: string
          description: Property description not available\.
        Tags:
          type: >-
            [list](aws-properties-appconfig-deployment-tags.md) of
            [tags](aws-properties-appconfig-deployment-tags.md)
          description: >-
            Metadata to assign to the deployment\. Tags help organize and
            categorize your AWS AppConfig resources\. Each tag consists of a key
            and an optional value, both of which you define\.
      required:
        - ApplicationId
        - ConfigurationProfileId
        - ConfigurationVersion
        - DeploymentStrategyId
        - EnvironmentId
    DeploymentStrategy:
      type: object
      properties:
        DeploymentDurationInMinutes:
          type: double
          description: Total amount of time for a deployment to last\.
        Description:
          type: string
          description: A description of the deployment strategy\.
        FinalBakeTimeInMinutes:
          type: double
          description: >-
            Specifies the amount of time AWS AppConfig monitors for Amazon
            CloudWatch alarms after the configuration has been deployed to 100%
            of its targets, before considering the deployment to be complete\.
            If an alarm is triggered during this time, AWS AppConfig rolls back
            the deployment\. You must configure permissions for AWS AppConfig to
            roll back based on CloudWatch alarms\. For more information, see
            [Configuring permissions for rollback based on Amazon CloudWatch
            alarms](https://docs.aws.amazon.com/appconfig/latest/userguide/getting-started-with-appconfig-cloudwatch-alarms-permissions.html)
            in the * AWS AppConfig User Guide*\.
        GrowthFactor:
          type: double
          description: >-
            The percentage of targets to receive a deployed configuration during
            each interval\.
        GrowthType:
          type: string
          description: >-
            The algorithm used to define how percentage grows over time\. AWS
            AppConfig supports the following growth types:    **Linear**: For
            this type, AWS AppConfig processes the deployment by dividing the
            total number of targets by the value specified for `Step
            percentage`\. For example, a linear deployment that uses a `Step
            percentage` of 10 deploys the configuration to 10 percent of the
            hosts\. After those deployments are complete, the system deploys the
            configuration to the next 10 percent\. This continues until 100% of
            the targets have successfully received the configuration\.   
            **Exponential**: For this type, AWS AppConfig processes the
            deployment exponentially using the following formula: `G*(2^N)`\. In
            this formula, `G` is the growth factor specified by the user and `N`
            is the number of steps until the configuration is deployed to all
            targets\. For example, if you specify a growth factor of 2, then the
            system rolls out the configuration as follows:    `2*(2^0)`    
            `2*(2^1)`     `2*(2^2)`    Expressed numerically, the deployment
            rolls out as follows: 2% of the targets, 4% of the targets, 8% of
            the targets, and continues until the configuration has been deployed
            to all targets\.
        Name:
          type: string
          description: A name for the deployment strategy\.
        ReplicateTo:
          type: string
          description: Save the deployment strategy to a Systems Manager \(SSM\) document\.
        Tags:
          type: >-
            [list](aws-properties-appconfig-deploymentstrategy-tags.md) of
            [tags](aws-properties-appconfig-deploymentstrategy-tags.md)
          description: >-
            Assigns metadata to an AWS AppConfig resource\. Tags help organize
            and categorize your AWS AppConfig resources\. Each tag consists of a
            key and an optional value, both of which you define\. You can
            specify a maximum of 50 tags for a resource\.
      required:
        - DeploymentDurationInMinutes
        - GrowthFactor
        - Name
        - ReplicateTo
    Environment:
      type: object
      properties:
        ApplicationId:
          type: string
          description: The application ID\.
        Description:
          type: string
          description: A description of the environment\.
        Monitors:
          type: >-
            [list](aws-properties-appconfig-environment-monitors.md) of
            [monitors](aws-properties-appconfig-environment-monitors.md)
          description: Amazon CloudWatch alarms to monitor during the deployment process\.
        Name:
          type: string
          description: A name for the environment\.
        Tags:
          type: >-
            [list](aws-properties-appconfig-environment-tags.md) of
            [tags](aws-properties-appconfig-environment-tags.md)
          description: >-
            Metadata to assign to the environment\. Tags help organize and
            categorize your AWS AppConfig resources\. Each tag consists of a key
            and an optional value, both of which you define\.
      required:
        - ApplicationId
        - Name
    HostedConfigurationVersion:
      type: object
      properties:
        ApplicationId:
          type: string
          description: The application ID\.
        ConfigurationProfileId:
          type: string
          description: The configuration profile ID\.
        Content:
          type: string
          description: The content of the configuration or the configuration data\.
        ContentType:
          type: string
          description: >-
            A standard MIME type describing the format of the configuration
            content\. For more information, see
            [Content\-Type](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17)\.
        Description:
          type: string
          description: A description of the configuration\.
        LatestVersionNumber:
          type: double
          description: >-
            An optional locking token used to prevent race conditions from
            overwriting configuration updates when creating a new version\. To
            ensure your data is not overwritten when creating multiple hosted
            configuration versions in rapid succession, specify the version
            number of the latest hosted configuration version\.
      required:
        - ApplicationId
        - ConfigurationProfileId
        - Content
        - ContentType
paths: {}
