openapi: 3.0.0
servers: []
info:
  title: Batch
  description: AWS CloudFormation Resource Specification
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2023-03-08-stackql-generated
components:
  schemas:
    ComputeEnvironment:
      type: object
      properties:
        ComputeEnvironmentName:
          type: string
          description: >-
            The name for your compute environment\. It can be up to 128
            characters long\. It can contain uppercase and lowercase letters,
            numbers, hyphens \(\-\), and underscores \(\_\)\.
        ComputeResources:
          type: >-
            [computeresources](aws-properties-batch-computeenvironment-computeresources.md)
          description: >-
            The ComputeResources property type specifies details of the compute
            resources managed by the compute environment\. This parameter is
            required for managed compute environments\. For more information,
            see [Compute
            Environments](https://docs.aws.amazon.com/batch/latest/userguide/compute_environments.html)
            in the *AWS Batch User Guide*\.
        EksConfiguration:
          type: >-
            [eksconfiguration](aws-properties-batch-computeenvironment-eksconfiguration.md)
          description: >-
            The details for the Amazon EKS cluster that supports the compute
            environment\.
        ReplaceComputeEnvironment:
          type: boolean
          description: >-
            Specifies whether the compute environment is replaced if an update
            is made that requires replacing the instances in the compute
            environment\. The default value is `true`\. To enable more
            properties to be updated, set this property to `false`\. When
            changing the value of this property to `false`, do not change any
            other properties at the same time\. If other properties are changed
            at the same time, and the change needs to be rolled back but it
            can't, it's possible for the stack to go into the
            `UPDATE_ROLLBACK_FAILED` state\. You can't update a stack that is in
            the `UPDATE_ROLLBACK_FAILED` state\. However, if you can continue to
            roll it back, you can return the stack to its original settings and
            then try to update it again\. For more information, see [Continue
            rolling back an
            update](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-continueupdaterollback.html)
            in the *AWS CloudFormation User Guide*\.   The properties that can't
            be changed without replacing the compute environment are in the
            [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-batch-computeenvironment-computeresources.html](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-batch-computeenvironment-computeresources.html)
            property type:
            [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-batch-computeenvironment-computeresources.html#cfn-batch-computeenvironment-computeresources-allocationstrategy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-batch-computeenvironment-computeresources.html#cfn-batch-computeenvironment-computeresources-allocationstrategy),
            [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-batch-computeenvironment-computeresources.html#cfn-batch-computeenvironment-computeresources-bidpercentage](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-batch-computeenvironment-computeresources.html#cfn-batch-computeenvironment-computeresources-bidpercentage),
            [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-batch-computeenvironment-computeresources.html#cfn-batch-computeenvironment-computeresources-ec2configuration](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-batch-computeenvironment-computeresources.html#cfn-batch-computeenvironment-computeresources-ec2configuration),
            [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-batch-computeenvironment-computeresources.html#cfn-batch-computeenvironment-computeresources-ec2keypair](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-batch-computeenvironment-computeresources.html#cfn-batch-computeenvironment-computeresources-ec2keypair),
            [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-batch-computeenvironment-computeresources.html#cfn-batch-computeenvironment-computeresources-ec2keypair](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-batch-computeenvironment-computeresources.html#cfn-batch-computeenvironment-computeresources-ec2keypair),
            [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-batch-computeenvironment-computeresources.html#cfn-batch-computeenvironment-computeresources-imageid](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-batch-computeenvironment-computeresources.html#cfn-batch-computeenvironment-computeresources-imageid),
            [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-batch-computeenvironment-computeresources.html#cfn-batch-computeenvironment-computeresources-instancerole](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-batch-computeenvironment-computeresources.html#cfn-batch-computeenvironment-computeresources-instancerole),
            [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-batch-computeenvironment-computeresources.html#cfn-batch-computeenvironment-computeresources-instancetypes](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-batch-computeenvironment-computeresources.html#cfn-batch-computeenvironment-computeresources-instancetypes),
            [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-batch-computeenvironment-computeresources.html#cfn-batch-computeenvironment-computeresources-launchtemplate](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-batch-computeenvironment-computeresources.html#cfn-batch-computeenvironment-computeresources-launchtemplate),
            [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-batch-computeenvironment-computeresources.html#cfn-batch-computeenvironment-computeresources-maxvcpus](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-batch-computeenvironment-computeresources.html#cfn-batch-computeenvironment-computeresources-maxvcpus),
            [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-batch-computeenvironment-computeresources.html#cfn-batch-computeenvironment-computeresources-minvcpus](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-batch-computeenvironment-computeresources.html#cfn-batch-computeenvironment-computeresources-minvcpus),
            [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-batch-computeenvironment-computeresources.html#cfn-batch-computeenvironment-computeresources-placementgroup](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-batch-computeenvironment-computeresources.html#cfn-batch-computeenvironment-computeresources-placementgroup),
            [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-batch-computeenvironment-computeresources.html#cfn-batch-computeenvironment-computeresources-securitygroupids](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-batch-computeenvironment-computeresources.html#cfn-batch-computeenvironment-computeresources-securitygroupids),
            [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-batch-computeenvironment-computeresources.html#cfn-batch-computeenvironment-computeresources-subnets](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-batch-computeenvironment-computeresources.html#cfn-batch-computeenvironment-computeresources-subnets),
            [Tags](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-batch-computeenvironment-computeresources.html#cfn-batch-computeenvironment-computeresources-tags),
            [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-batch-computeenvironment-computeresources.html#cfn-batch-computeenvironment-computeresources-type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-batch-computeenvironment-computeresources.html#cfn-batch-computeenvironment-computeresources-type),
            and
            [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-batch-computeenvironment-computeresources.html#cfn-batch-computeenvironment-computeresources-updatetolatestimageversion](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-batch-computeenvironment-computeresources.html#cfn-batch-computeenvironment-computeresources-updatetolatestimageversion)\.
        ServiceRole:
          type: string
          description: >-
            The full Amazon Resource Name \(ARN\) of the IAM role that allows
            AWS Batch to make calls to other AWS services on your behalf\. For
            more information, see [AWS Batch service IAM
            role](https://docs.aws.amazon.com/batch/latest/userguide/service_IAM_role.html)
            in the * AWS Batch User Guide*\.   If your account already created
            the AWS Batch service\-linked role, that role is used by default for
            your compute environment unless you specify a different role here\.
            If the AWS Batch service\-linked role doesn't exist in your account,
            and no role is specified here, the service attempts to create the
            AWS Batch service\-linked role in your account\. If your specified
            role has a path other than `/`, then you must specify either the
            full role ARN \(recommended\) or prefix the role name with the
            path\. For example, if a role with the name `bar` has a path of
            `/foo/`, specify `/foo/bar` as the role name\. For more information,
            see [Friendly names and
            paths](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html#identifiers-friendly-names)
            in the *IAM User Guide*\.   Depending on how you created your AWS
            Batch service role, its ARN might contain the `service-role` path
            prefix\. When you only specify the name of the service role, AWS
            Batch assumes that your ARN doesn't use the `service-role` path
            prefix\. Because of this, we recommend that you specify the full ARN
            of your service role when you create compute environments\.
        State:
          type: string
          description: >-
            The state of the compute environment\. If the state is `ENABLED`,
            then the compute environment accepts jobs from a queue and can scale
            out automatically based on queues\.   If the state is `ENABLED`,
            then the AWS Batch scheduler can attempt to place jobs from an
            associated job queue on the compute resources within the
            environment\. If the compute environment is managed, then it can
            scale its instances out or in automatically, based on the job queue
            demand\.   If the state is `DISABLED`, then the AWS Batch scheduler
            doesn't attempt to place jobs within the environment\. Jobs in a
            `STARTING` or `RUNNING` state continue to progress normally\.
            Managed compute environments in the `DISABLED` state don't scale
            out\.    Compute environments in a `DISABLED` state may continue to
            incur billing charges\. To prevent additional charges, turn off and
            then delete the compute environment\. For more information, see
            [State](https://docs.aws.amazon.com/batch/latest/userguide/compute_environment_parameters.html#compute_environment_state)
            in the * AWS Batch User Guide*\. When an instance is idle, the
            instance scales down to the `minvCpus` value\. However, the instance
            size doesn't change\. For example, consider a `c5.8xlarge` instance
            with a `minvCpus` value of `4` and a `desiredvCpus` value of `36`\.
            This instance doesn't scale down to a `c5.large` instance\.
        Tags:
          type: map of string
          description: The tags applied to the compute environment\.
        Type:
          type: string
          description: >-
            The type of the compute environment: `MANAGED` or `UNMANAGED`\. For
            more information, see [Compute
            Environments](https://docs.aws.amazon.com/batch/latest/userguide/compute_environments.html)
            in the * AWS Batch User Guide*\.
        UnmanagedvCpus:
          type: integer
          description: >-
            The maximum number of vCPUs for an unmanaged compute environment\.
            This parameter is only used for fair share scheduling to reserve
            vCPU capacity for new share identifiers\. If this parameter isn't
            provided for a fair share job queue, no vCPU capacity is
            reserved\.   This parameter is only supported when the `type`
            parameter is set to `UNMANAGED`\.
        UpdatePolicy:
          type: >-
            [updatepolicy](aws-properties-batch-computeenvironment-updatepolicy.md)
          description: >-
            Specifies the infrastructure update policy for the compute
            environment\. For more information about infrastructure updates, see
            [Updating compute
            environments](https://docs.aws.amazon.com/batch/latest/userguide/updating-compute-environments.html)
            in the * AWS Batch User Guide*\.
      required:
        - Type
    JobDefinition:
      type: object
      properties:
        ContainerProperties:
          type: >-
            [containerproperties](aws-properties-batch-jobdefinition-containerproperties.md)
          description: >-
            An object with various properties specific to Amazon ECS based
            jobs\. Valid values are `containerProperties`, `eksProperties`, and
            `nodeProperties`\. Only one can be specified\.
        EksProperties:
          type: '[eksproperties](aws-properties-batch-jobdefinition-eksproperties.md)'
          description: >-
            An object with various properties that are specific to Amazon EKS
            based jobs\. Valid values are `containerProperties`,
            `eksProperties`, and `nodeProperties`\. Only one can be specified\.
        JobDefinitionName:
          type: string
          description: The name of the job definition\.
        NodeProperties:
          type: >-
            [nodeproperties](aws-properties-batch-jobdefinition-nodeproperties.md)
          description: >-
            An object with various properties that are specific to multi\-node
            parallel jobs\. Valid values are `containerProperties`,
            `eksProperties`, and `nodeProperties`\. Only one can be
            specified\.   If the job runs on Fargate resources, don't specify
            `nodeProperties`\. Use `containerProperties` instead\.
        Parameters:
          type: object
          description: >-
            Default parameters or parameter substitution placeholders that are
            set in the job definition\. Parameters are specified as a key\-value
            pair mapping\. Parameters in a `SubmitJob` request override any
            corresponding parameter defaults from the job definition\. For more
            information about specifying parameters, see [Job definition
            parameters](https://docs.aws.amazon.com/batch/latest/userguide/job_definition_parameters.html)
            in the * AWS Batch User Guide*\.
        PlatformCapabilities:
          type: array
          description: >-
            The platform capabilities required by the job definition\. If no
            value is specified, it defaults to `EC2`\. Jobs run on Fargate
            resources specify `FARGATE`\.
        PropagateTags:
          type: boolean
          description: >-
            Specifies whether to propagate the tags from the job or job
            definition to the corresponding Amazon ECS task\. If no value is
            specified, the tags aren't propagated\. Tags can only be propagated
            to the tasks when the tasks are created\. For tags with the same
            name, job tags are given priority over job definitions tags\. If the
            total number of combined tags from the job and job definition is
            over 50, the job is moved to the `FAILED` state\.
        RetryStrategy:
          type: '[retrystrategy](aws-properties-batch-jobdefinition-retrystrategy.md)'
          description: >-
            The retry strategy to use for failed jobs that are submitted with
            this job definition\.
        SchedulingPriority:
          type: integer
          description: >-
            The scheduling priority of the job definition\. This only affects
            jobs in job queues with a fair share policy\. Jobs with a higher
            scheduling priority are scheduled before jobs with a lower
            scheduling priority\.
        Tags:
          type: object
          description: The tags that are applied to the job definition\.
        Timeout:
          type: '[timeout](aws-properties-batch-jobdefinition-timeout.md)'
          description: >-
            The timeout time for jobs that are submitted with this job
            definition\. After the amount of time you specify passes, AWS Batch
            terminates your jobs if they aren't finished\.
        Type:
          type: string
          description: >-
            The type of job definition\. For more information about multi\-node
            parallel jobs, see [Creating a multi\-node parallel job
            definition](https://docs.aws.amazon.com/batch/latest/userguide/multi-node-job-def.html)
            in the * AWS Batch User Guide*\.   If the job is run on Fargate
            resources, then `multinode` isn't supported\.
      required:
        - Type
    JobQueue:
      type: object
      properties:
        ComputeEnvironmentOrder:
          type: >-
            [list](aws-properties-batch-jobqueue-computeenvironmentorder.md) of
            [computeenvironmentorder](aws-properties-batch-jobqueue-computeenvironmentorder.md)
          description: >-
            The set of compute environments mapped to a job queue and their
            order relative to each other\. The job scheduler uses this parameter
            to determine which compute environment runs a specific job\. Compute
            environments must be in the `VALID` state before you can associate
            them with a job queue\. You can associate up to three compute
            environments with a job queue\. All of the compute environments must
            be either EC2 \(`EC2` or `SPOT`\) or Fargate \(`FARGATE` or
            `FARGATE_SPOT`\); EC2 and Fargate compute environments can't be
            mixed\.   All compute environments that are associated with a job
            queue must share the same architecture\. AWS Batch doesn't support
            mixing compute environment architecture types in a single job
            queue\.
        JobQueueName:
          type: string
          description: >-
            The name of the job queue\. It can be up to 128 letters long\. It
            can contain uppercase and lowercase letters, numbers, hyphens
            \(\-\), and underscores \(\_\)\.
        Priority:
          type: integer
          description: >-
            The priority of the job queue\. Job queues with a higher priority
            \(or a higher integer value for the `priority` parameter\) are
            evaluated first when associated with the same compute environment\.
            Priority is determined in descending order\. For example, a job
            queue with a priority value of `10` is given scheduling preference
            over a job queue with a priority value of `1`\. All of the compute
            environments must be either EC2 \(`EC2` or `SPOT`\) or Fargate
            \(`FARGATE` or `FARGATE_SPOT`\); EC2 and Fargate compute
            environments can't be mixed\.
        SchedulingPolicyArn:
          type: string
          description: >-
            The Amazon Resource Name \(ARN\) of the scheduling policy\. The
            format is `aws:Partition:batch:Region:Account:scheduling-policy/Name
            `\. For example,
            `aws:aws:batch:us-west-2:123456789012:scheduling-policy/MySchedulingPolicy`\.
        State:
          type: string
          description: >-
            The state of the job queue\. If the job queue state is `ENABLED`, it
            is able to accept jobs\. If the job queue state is `DISABLED`, new
            jobs can't be added to the queue, but jobs already in the queue can
            finish\.
        Tags:
          type: map of string
          description: >-
            The tags that are applied to the job queue\. For more information,
            see [Tagging your AWS Batch
            resources](https://docs.aws.amazon.com/batch/latest/userguide/using-tags.html)
            in * AWS Batch User Guide*\.
      required:
        - ComputeEnvironmentOrder
        - Priority
    SchedulingPolicy:
      type: object
      properties:
        FairsharePolicy:
          type: >-
            [fairsharepolicy](aws-properties-batch-schedulingpolicy-fairsharepolicy.md)
          description: The fair share policy of the scheduling policy\.
        Name:
          type: string
          description: >-
            The name of the scheduling policy\. It can be up to 128 letters
            long\. It can contain uppercase and lowercase letters, numbers,
            hyphens \(\-\), and underscores \(\_\)\.
        Tags:
          type: map of string
          description: >-
            The tags that you apply to the scheduling policy to help you
            categorize and organize your resources\. Each tag consists of a key
            and an optional value\. For more information, see [Tagging AWS
            Resources](https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html)
            in * AWS General Reference*\.   These tags can be updated or removed
            using the
            [TagResource](https://docs.aws.amazon.com/batch/latest/APIReference/API_TagResource.html)
            and
            [UntagResource](https://docs.aws.amazon.com/batch/latest/APIReference/API_UntagResource.html)
            API operations\.
paths: {}
