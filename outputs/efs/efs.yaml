openapi: 3.0.0
servers: []
info:
  title: EFS
  description: AWS CloudFormation Resource Specification
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2023-03-08-stackql-generated
components:
  schemas:
    AccessPoint:
      type: object
      properties:
        AccessPointTags:
          type: >-
            list of
            [accesspointtag](aws-properties-efs-accesspoint-accesspointtag.md)
          description: >-
            An array of key\-value pairs to apply to this resource\.   For more
            information, see
            [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html)\.
        ClientToken:
          type: string
          description: >-
            The opaque string specified in the request to ensure idempotent
            creation\.
        FileSystemId:
          type: string
          description: >-
            The ID of the EFS file system that the access point applies to\.
            Accepts only the ID format for input when specifying a file system,
            for example `fs-0123456789abcedf2`\.
        PosixUser:
          type: '[posixuser](aws-properties-efs-accesspoint-posixuser.md)'
          description: >-
            The full POSIX identity, including the user ID, group ID, and
            secondary group IDs on the access point that is used for all file
            operations by NFS clients using the access point\.
        RootDirectory:
          type: '[rootdirectory](aws-properties-efs-accesspoint-rootdirectory.md)'
          description: >-
            The directory on the Amazon EFS file system that the access point
            exposes as the root directory to NFS clients using the access
            point\.
      required:
        - FileSystemId
    FileSystem:
      type: object
      properties:
        AvailabilityZoneName:
          type: string
          description: >-
            Used to create a file system that uses One Zone storage classes\. It
            specifies the AWS Availability Zone in which to create the file
            system\. Use the format `us-east-1a` to specify the Availability
            Zone\. For more information about One Zone storage classes, see
            [Using EFS storage
            classes](https://docs.aws.amazon.com/efs/latest/ug/storage-classes.html)
            in the *Amazon EFS User Guide*\.   One Zone storage classes are not
            available in all Availability Zones in AWS Regions where Amazon EFS
            is available\.
        BackupPolicy:
          type: '[backuppolicy](aws-properties-efs-filesystem-backuppolicy.md)'
          description: >-
            Use the `BackupPolicy` to turn automatic backups on or off for the
            file system\.
        BypassPolicyLockoutSafetyCheck:
          type: boolean
          description: >-
            \(Optional\) A boolean that specifies whether or not to bypass the
            `FileSystemPolicy` lockout safety check\. The lockout safety check
            determines whether the policy in the request will lock out, or
            prevent, the IAM principal that is making the request from making
            future `PutFileSystemPolicy` requests on this file system\. Set
            `BypassPolicyLockoutSafetyCheck` to `True` only when you intend to
            prevent the IAM principal that is making the request from making
            subsequent `PutFileSystemPolicy` requests on this file system\. The
            default value is `False`\.
        Encrypted:
          type: boolean
          description: >-
            A Boolean value that, if true, creates an encrypted file system\.
            When creating an encrypted file system, you have the option of
            specifying a KmsKeyId for an existing AWS KMS key\. If you don't
            specify a KMS key, then the default KMS key for Amazon EFS,
            `/aws/elasticfilesystem`, is used to protect the encrypted file
            system\.
        FileSystemPolicy:
          type: object
          description: >-
            The `FileSystemPolicy` for the EFS file system\. A file system
            policy is an IAM resource policy used to control NFS access to an
            EFS file system\. For more information, see [Using IAM to control
            NFS access to Amazon
            EFS](https://docs.aws.amazon.com/efs/latest/ug/iam-access-control-nfs-efs.html)
            in the *Amazon EFS User Guide*\.
        FileSystemTags:
          type: >-
            list of
            [elasticfilesystemtag](aws-properties-efs-filesystem-elasticfilesystemtag.md)
          description: >-
            Use to create one or more tags associated with the file system\.
            Each tag is a user\-defined key\-value pair\. Name your file system
            on creation by including a `"Key":"Name","Value":"{value}"`
            key\-value pair\. Each key must be unique\. For more information,
            see [Tagging AWS
            resources](https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html)
            in the * AWS General Reference Guide*\.
        KmsKeyId:
          type: string
          description: >-
            The ID of the AWS KMS key to be used to protect the encrypted file
            system\. This parameter is only required if you want to use a
            nondefault KMS key\. If this parameter is not specified, the default
            KMS key for Amazon EFS is used\. This ID can be in one of the
            following formats:   + Key ID \- A unique identifier of the key, for
            example `1234abcd-12ab-34cd-56ef-1234567890ab`\. + ARN \- An Amazon
            Resource Name \(ARN\) for the key, for example
            `arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab`\.
            + Key alias \- A previously created display name for a key, for
            example `alias/projectKey1`\. + Key alias ARN \- An ARN for a key
            alias, for example
            `arn:aws:kms:us-west-2:444455556666:alias/projectKey1`\. If
            `KmsKeyId` is specified, the `Encrypted` parameter must be set to
            true\.
        LifecyclePolicies:
          type: >-
            list of
            [lifecyclepolicy](aws-properties-efs-filesystem-lifecyclepolicy.md)
          description: >-
            An array of `LifecyclePolicy` objects that define the file system's
            `LifecycleConfiguration` object\. A `LifecycleConfiguration` object
            informs EFS lifecycle management and intelligent tiering of the
            following:   + When to move files in the file system from primary
            storage to the IA storage class\. + When to move files that are in
            IA storage to primary storage\. Amazon EFS requires that each
            `LifecyclePolicy` object have only a single transition\. This means
            that in a request body, `LifecyclePolicies` needs to be structured
            as an array of `LifecyclePolicy` objects, one object for each
            transition, `TransitionToIA`, `TransitionToPrimaryStorageClass`\.
            See the example requests in the following section for more
            information\.
        PerformanceMode:
          type: string
          description: >-
            The performance mode of the file system\. We recommend
            `generalPurpose` performance mode for most file systems\. File
            systems using the `maxIO` performance mode can scale to higher
            levels of aggregate throughput and operations per second with a
            tradeoff of slightly higher latencies for most file operations\. The
            performance mode can't be changed after the file system has been
            created\.   The `maxIO` mode is not supported on file systems using
            One Zone storage classes\.
        ProvisionedThroughputInMibps:
          type: double
          description: >-
            The throughput, measured in MiB/s, that you want to provision for a
            file system that you're creating\. Valid values are 1\-1024\.
            Required if `ThroughputMode` is set to `provisioned`\. The upper
            limit for throughput is 1024 MiB/s\. To increase this limit, contact
            AWS Support\. For more information, see [Amazon EFS quotas that you
            can
            increase](https://docs.aws.amazon.com/efs/latest/ug/limits.html#soft-limits)
            in the *Amazon EFS User Guide*\.
        ThroughputMode:
          type: string
          description: >-
            Specifies the throughput mode for the file system\. The mode can be
            `bursting`, `provisioned`, or `elastic`\. If you set
            `ThroughputMode` to `provisioned`, you must also set a value for
            `ProvisionedThroughputInMibps`\. After you create the file system,
            you can decrease your file system's throughput in Provisioned
            Throughput mode or change between the throughput modes, with certain
            time restrictions\. For more information, see [Specifying throughput
            with provisioned
            mode](https://docs.aws.amazon.com/efs/latest/ug/performance.html#provisioned-throughput)
            in the *Amazon EFS User Guide*\.    Default is `bursting`\.
    MountTarget:
      type: object
      properties:
        FileSystemId:
          type: string
          description: The ID of the file system for which to create the mount target\.
        IpAddress:
          type: string
          description: >-
            Valid IPv4 address within the address range of the specified
            subnet\.
        SecurityGroups:
          type: array
          description: >-
            Up to five VPC security group IDs, of the form `sg-xxxxxxxx`\. These
            must be for the same VPC as subnet specified\.
        SubnetId:
          type: string
          description: >-
            The ID of the subnet to add the mount target in\. For file systems
            that use One Zone storage classes, use the subnet that is associated
            with the file system's Availability Zone\.
      required:
        - FileSystemId
        - SecurityGroups
        - SubnetId
paths: {}
