openapi: 3.0.0
servers: []
info:
  title: ElastiCache
  description: AWS CloudFormation Resource Specification
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2023-03-08-stackql-generated
components:
  schemas:
    CacheCluster:
      type: object
      properties:
        AutoMinorVersionUpgrade:
          type: boolean
          description: >-
            If you are running Redis engine version 6\.0 or later, set this
            parameter to yes if you want to opt\-in to the next minor version
            upgrade campaign\. This parameter is disabled for previous
            versions\.
        AZMode:
          type: string
          description: >-
            Specifies whether the nodes in this Memcached cluster are created in
            a single Availability Zone or created across multiple Availability
            Zones in the cluster's region\.   This parameter is only supported
            for Memcached clusters\.   If the `AZMode` and
            `PreferredAvailabilityZones` are not specified, ElastiCache assumes
            `single-az` mode\.
        CacheNodeType:
          description: >-
            The compute and memory capacity of the nodes in the node group
            \(shard\)\.   The following node types are supported by
            ElastiCache\. Generally speaking, the current generation types
            provide more memory and computational power at lower cost when
            compared to their equivalent previous generation counterparts\.
            Changing the CacheNodeType of a Memcached instance is currently not
            supported\. If you need to scale using Memcached, we recommend
            forcing a replacement update by changing the `LogicalResourceId` of
            the resource\.   + General purpose:   + Current generation:
        undefined:
          type: string
          description: >-
            **R3 node types:** `cache.r3.large`, `cache.r3.xlarge`,
            `cache.r3.2xlarge`, `cache.r3.4xlarge`, `cache.r3.8xlarge` For
            region availability, see [Supported Node Types by
            Region](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion)  
            **Additional node type info**   + All current generation instance
            types are created in Amazon VPC by default\. + Redis append\-only
            files \(AOF\) are not supported for T1 or T2 instances\. + Redis
            Multi\-AZ with automatic failover is not supported on T1 instances\.
            + Redis configuration variables `appendonly` and `appendfsync` are
            not supported on Redis version 2\.8\.22 and later\.
        CacheParameterGroupName:
          type: string
          description: >-
            The name of the parameter group to associate with this cluster\. If
            this argument is omitted, the default parameter group for the
            specified engine is used\. You cannot use any parameter group which
            has `cluster-enabled='yes'` when creating a cluster\.
        CacheSecurityGroupNames:
          type: array
          description: >-
            A list of security group names to associate with this cluster\.  
            Use this parameter only when you are creating a cluster outside of
            an Amazon Virtual Private Cloud \(Amazon VPC\)\.
        CacheSubnetGroupName:
          type: string
          description: >-
            The name of the subnet group to be used for the cluster\.   Use this
            parameter only when you are creating a cluster in an Amazon Virtual
            Private Cloud \(Amazon VPC\)\.   If you're going to launch your
            cluster in an Amazon VPC, you need to create a subnet group before
            you start creating a cluster\. For more information, see
            [AWS::ElastiCache::SubnetGroup](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-subnetgroup.html)\.
        ClusterName:
          type: string
          description: >-
            A name for the cache cluster\. If you don't specify a name,
            AWSCloudFormation generates a unique physical ID and uses that ID
            for the cache cluster\. For more information, see [Name
            Type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html)\.  
            The name must contain 1 to 50 alphanumeric characters or hyphens\.
            The name must start with a letter and cannot end with a hyphen or
            contain two consecutive hyphens\.
        Engine:
          type: string
          description: >-
            The name of the cache engine to be used for this cluster\.   Valid
            values for this parameter are: `memcached` \| `redis`
        EngineVersion:
          type: string
          description: >-
            The version number of the cache engine to be used for this cluster\.
            To view the supported cache engine versions, use the
            DescribeCacheEngineVersions operation\.    **Important:** You can
            upgrade to a newer engine version \(see [Selecting a Cache Engine
            and
            Version](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SelectEngine.html#VersionManagement)\),
            but you cannot downgrade to an earlier engine version\. If you want
            to use an earlier engine version, you must delete the existing
            cluster or replication group and create it anew with the earlier
            engine version\.
        IpDiscovery:
          type: string
          description: >-
            The network type you choose when modifying a cluster, either `ipv4`
            \| `ipv6`\. IPv6 is supported for workloads using Redis engine
            version 6\.2 onward or Memcached engine version 1\.6\.6 on all
            instances built on the [Nitro
            system](http://aws.amazon.com/ec2/nitro/)\.
        LogDeliveryConfigurations:
          type: >-
            list of
            [logdeliveryconfigurationrequest](aws-properties-elasticache-cachecluster-logdeliveryconfigurationrequest.md)
          description: Specifies the destination, format and type of the logs\.
        NetworkType:
          type: string
          description: >-
            Must be either `ipv4` \| `ipv6` \| `dual_stack`\. IPv6 is supported
            for workloads using Redis engine version 6\.2 onward or Memcached
            engine version 1\.6\.6 on all instances built on the [Nitro
            system](http://aws.amazon.com/ec2/nitro/)\.
        NotificationTopicArn:
          type: string
          description: >-
            The Amazon Resource Name \(ARN\) of the Amazon Simple Notification
            Service \(SNS\) topic to which notifications are sent\.   The Amazon
            SNS topic owner must be the same as the cluster owner\.
        NumCacheNodes:
          type: integer
          description: >-
            The number of cache nodes that the cache cluster should have\.  
            However, if the `PreferredAvailabilityZone` and
            `PreferredAvailabilityZones `properties were not previously
            specified and you don't specify any new values, an update requires [
            replacement](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement)\.
        Port:
          type: integer
          description: >-
            The port number on which each of the cache nodes accepts
            connections\.
        PreferredAvailabilityZone:
          type: string
          description: >-
            The EC2 Availability Zone in which the cluster is created\.   All
            nodes belonging to this cluster are placed in the preferred
            Availability Zone\. If you want to create your nodes across multiple
            Availability Zones, use `PreferredAvailabilityZones`\.   Default:
            System chosen Availability Zone\.
        PreferredAvailabilityZones:
          type: array
          description: >-
            A list of the Availability Zones in which cache nodes are created\.
            The order of the zones in the list is not important\.   This option
            is only supported on Memcached\.   If you are creating your cluster
            in an Amazon VPC \(recommended\) you can only locate nodes in
            Availability Zones that are associated with the subnets in the
            selected subnet group\.   The number of Availability Zones listed
            must equal the value of `NumCacheNodes`\. If you want all the nodes
            in the same Availability Zone, use `PreferredAvailabilityZone`
            instead, or repeat the Availability Zone multiple times in the
            list\.   Default: System chosen Availability Zones\.
        PreferredMaintenanceWindow:
          type: string
          description: >-
            Specifies the weekly time range during which maintenance on the
            cluster is performed\. It is specified as a range in the format
            ddd:hh24:mi\-ddd:hh24:mi \(24H Clock UTC\)\. The minimum maintenance
            window is a 60 minute period\. Valid values for `ddd` are:  
            Specifies the weekly time range during which maintenance on the
            cluster is performed\. It is specified as a range in the format
            ddd:hh24:mi\-ddd:hh24:mi \(24H Clock UTC\)\. The minimum maintenance
            window is a 60 minute period\.   Valid values for `ddd` are:   + 
            `sun`  +  `mon`  +  `tue`  +  `wed`  +  `thu`  +  `fri`  +  `sat` 
            Example: `sun:23:00-mon:01:30`
        SnapshotArns:
          type: array
          description: >-
            A single\-element string list containing an Amazon Resource Name
            \(ARN\) that uniquely identifies a Redis RDB snapshot file stored in
            Amazon S3\. The snapshot file is used to populate the node group
            \(shard\)\. The Amazon S3 object name in the ARN cannot contain any
            commas\.   This parameter is only valid if the `Engine` parameter is
            `redis`\. Example of an Amazon S3 ARN:
            `arn:aws:s3:::my_bucket/snapshot1.rdb`
        SnapshotName:
          type: string
          description: >-
            The name of a Redis snapshot from which to restore data into the new
            node group \(shard\)\. The snapshot status changes to `restoring`
            while the new node group \(shard\) is being created\.   This
            parameter is only valid if the `Engine` parameter is `redis`\.
        SnapshotRetentionLimit:
          type: integer
          description: >-
            The number of days for which ElastiCache retains automatic snapshots
            before deleting them\. For example, if you set
            `SnapshotRetentionLimit` to 5, a snapshot taken today is retained
            for 5 days before being deleted\.   This parameter is only valid if
            the `Engine` parameter is `redis`\. Default: 0 \(i\.e\., automatic
            backups are disabled for this cache cluster\)\.
        SnapshotWindow:
          type: string
          description: >-
            The daily time range \(in UTC\) during which ElastiCache begins
            taking a daily snapshot of your node group \(shard\)\.   Example:
            `05:00-09:00`    If you do not specify this parameter, ElastiCache
            automatically chooses an appropriate time range\.   This parameter
            is only valid if the `Engine` parameter is `redis`\.
        Tags:
          type: >-
            list of
            [tag](https://docs.aws.amazon.com/awscloudformation/latest/userguide/aws-properties-resource-tags.html)
          description: A list of tags to be added to this resource\.
        TransitEncryptionEnabled:
          type: boolean
          description: >-
            A flag that enables in\-transit encryption when set to true\.   
            Only available when creating a cache cluster in an Amazon VPC using
            Memcached version 1\.6\.12 or later\.
        VpcSecurityGroupIds:
          type: array
          description: >-
            One or more VPC security groups associated with the cluster\.   Use
            this parameter only when you are creating a cluster in an Amazon
            Virtual Private Cloud \(Amazon VPC\)\.
      required:
        - null
        - Engine
        - NumCacheNodes
    GlobalReplicationGroup:
      type: object
      properties:
        AutomaticFailoverEnabled:
          type: boolean
          description: >-
            Specifies whether a read\-only replica is automatically promoted to
            read/write primary if the existing primary fails\.   
            `AutomaticFailoverEnabled` must be enabled for Redis \(cluster mode
            enabled\) replication groups\.
        CacheNodeType:
          type: string
          description: The cache node type of the Global datastore
        CacheParameterGroupName:
          type: string
          description: >-
            The name of the cache parameter group to use with the Global
            datastore\. It must be compatible with the major engine version used
            by the Global datastore\.
        EngineVersion:
          type: string
          description: The Elasticache Redis engine version\.
        GlobalNodeGroupCount:
          type: integer
          description: The number of node groups that comprise the Global Datastore\.
        GlobalReplicationGroupDescription:
          type: string
          description: The optional description of the Global datastore
        GlobalReplicationGroupIdSuffix:
          type: string
          description: >-
            The suffix name of a Global Datastore\. The suffix guarantees
            uniqueness of the Global Datastore name across multiple regions\.
        Members:
          type: >-
            list of
            [globalreplicationgroupmember](aws-properties-elasticache-globalreplicationgroup-globalreplicationgroupmember.md)
          description: The replication groups that comprise the Global datastore\.
        RegionalConfigurations:
          type: >-
            list of
            [regionalconfiguration](aws-properties-elasticache-globalreplicationgroup-regionalconfiguration.md)
          description: The Regions that comprise the Global Datastore\.
      required:
        - Members
    ParameterGroup:
      type: object
      properties:
        CacheParameterGroupFamily:
          type: string
          description: >-
            The name of the cache parameter group family that this cache
            parameter group is compatible with\.   Valid values are:
            `memcached1.4` \| `memcached1.5` \| `memcached1.6` \| `redis2.6` \|
            `redis2.8` \| `redis3.2` \| `redis4.0` \| `redis5.0` \| `redis6.x`
            \| `redis7`
        Description:
          type: string
          description: The description for this cache parameter group\.
        Properties:
          description: >-
            A comma\-delimited list of parameter name/value pairs\. For more
            information, see
            [ModifyCacheParameterGroup](https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_ModifyCacheParameterGroup.html)
            in the *Amazon ElastiCache API Reference Guide*\.    For example:
        undefined:
          type: map of string
          description: >-
            ``` "Properties" : {    "cas_disabled" : "1",   
            "chunk_size_growth_factor" : "1.02" } ```
        Tags:
          type: >-
            list of
            [tag](https://docs.aws.amazon.com/awscloudformation/latest/userguide/aws-properties-resource-tags.html)
          description: >-
            A tag that can be added to an ElastiCache parameter group\. Tags are
            composed of a Key/Value pair\. You can use tags to categorize and
            track all your parameter groups\. A tag with a null Value is
            permitted\.
      required:
        - CacheParameterGroupFamily
        - Description
    ReplicationGroup:
      type: object
      properties:
        AtRestEncryptionEnabled:
          type: boolean
          description: >-
            A flag that enables encryption at rest when set to `true`\.   You
            cannot modify the value of `AtRestEncryptionEnabled` after the
            replication group is created\. To enable encryption at rest on a
            replication group you must set `AtRestEncryptionEnabled` to `true`
            when you create the replication group\.     **Required:** Only
            available when creating a replication group in an Amazon VPC using
            redis version `3.2.6` or `4.x` onward\.   Default: `false`
        AuthToken:
          type: string
          description: >-
            **Reserved parameter\.** The password used to access a password
            protected server\.    `AuthToken` can be specified only on
            replication groups where `TransitEncryptionEnabled` is `true`\. For
            more information, see [Authenticating Users with the Redis AUTH
            Command](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/auth.html)\.  
            For HIPAA compliance, you must specify `TransitEncryptionEnabled` as
            `true`, an `AuthToken`, and a `CacheSubnetGroup`\. Password
            constraints:   + Must be only printable ASCII characters\. + Must be
            at least 16 characters and no more than 128 characters in length\. +
            Nonalphanumeric characters are restricted to \(\!, &, \#, $, ^, <,
            >, \-, \)\.  For more information, see [AUTH
            password](http://redis.io/commands/AUTH) at
            http://redis\.io/commands/AUTH\.   If ADDING the AuthToken, update
            requires
            [Replacement](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement)\.
        AutomaticFailoverEnabled:
          type: boolean
          description: >-
            Specifies whether a read\-only replica is automatically promoted to
            read/write primary if the existing primary fails\.   
            `AutomaticFailoverEnabled` must be enabled for Redis \(cluster mode
            enabled\) replication groups\.   Default: false
        AutoMinorVersionUpgrade:
          type: boolean
          description: >-
            If you are running Redis engine version 6\.0 or later, set this
            parameter to yes if you want to opt\-in to the next minor version
            upgrade campaign\. This parameter is disabled for previous
            versions\.
        CacheNodeType:
          description: >-
            The compute and memory capacity of the nodes in the node group
            \(shard\)\.   The following node types are supported by
            ElastiCache\. Generally speaking, the current generation types
            provide more memory and computational power at lower cost when
            compared to their equivalent previous generation counterparts\.   +
            General purpose:   + Current generation:
        undefined:
          type: string
          description: >-
            **R3 node types:** `cache.r3.large`, `cache.r3.xlarge`,
            `cache.r3.2xlarge`, `cache.r3.4xlarge`, `cache.r3.8xlarge` For
            region availability, see [Supported Node Types by Amazon
            Region](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion)
        CacheParameterGroupName:
          type: string
          description: >-
            The name of the parameter group to associate with this replication
            group\. If this argument is omitted, the default cache parameter
            group for the specified engine is used\.   If you are running Redis
            version 3\.2\.4 or later, only one node group \(shard\), and want to
            use a default parameter group, we recommend that you specify the
            parameter group by name\.    + To create a Redis \(cluster mode
            disabled\) replication group, use
            `CacheParameterGroupName=default.redis3.2`\. + To create a Redis
            \(cluster mode enabled\) replication group, use
            `CacheParameterGroupName=default.redis3.2.cluster.on`\.
        CacheSecurityGroupNames:
          type: array
          description: >-
            A list of cache security group names to associate with this
            replication group\.
        CacheSubnetGroupName:
          type: string
          description: >-
            The name of the cache subnet group to be used for the replication
            group\.   If you're going to launch your cluster in an Amazon VPC,
            you need to create a subnet group before you start creating a
            cluster\. For more information, see
            [AWS::ElastiCache::SubnetGroup](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-subnetgroup.html)\.
        DataTieringEnabled:
          type: boolean
          description: >-
            Enables data tiering\. Data tiering is only supported for
            replication groups using the r6gd node type\. This parameter must be
            set to true when using r6gd nodes\. For more information, see [Data
            tiering](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/data-tiering.html)\.
        Engine:
          type: string
          description: >-
            The name of the cache engine to be used for the clusters in this
            replication group\. The value must be set to `Redis`\.
        EngineVersion:
          type: string
          description: >-
            The version number of the cache engine to be used for the clusters
            in this replication group\. To view the supported cache engine
            versions, use the `DescribeCacheEngineVersions` operation\.   
            **Important:** You can upgrade to a newer engine version \(see
            [Selecting a Cache Engine and
            Version](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SelectEngine.html#VersionManagement)\)
            in the *ElastiCache User Guide*, but you cannot downgrade to an
            earlier engine version\. If you want to use an earlier engine
            version, you must delete the existing cluster or replication group
            and create it anew with the earlier engine version\.
        GlobalReplicationGroupId:
          type: string
          description: The name of the Global datastore
        IpDiscovery:
          type: string
          description: >-
            The network type you choose when creating a replication group,
            either `ipv4` \| `ipv6`\. IPv6 is supported for workloads using
            Redis engine version 6\.2 onward or Memcached engine version 1\.6\.6
            on all instances built on the [Nitro
            system](http://aws.amazon.com/ec2/nitro/)\.
        KmsKeyId:
          type: string
          description: The ID of the KMS key used to encrypt the disk on the cluster\.
        LogDeliveryConfigurations:
          type: >-
            list of
            [logdeliveryconfigurationrequest](aws-properties-elasticache-replicationgroup-logdeliveryconfigurationrequest.md)
          description: Specifies the destination, format and type of the logs\.
        MultiAZEnabled:
          type: boolean
          description: >-
            A flag indicating if you have Multi\-AZ enabled to enhance fault
            tolerance\. For more information, see [Minimizing Downtime:
            Multi\-AZ](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/AutoFailover.html)\.
        NetworkType:
          type: string
          description: >-
            Must be either `ipv4` \| `ipv6` \| `dual_stack`\. IPv6 is supported
            for workloads using Redis engine version 6\.2 onward or Memcached
            engine version 1\.6\.6 on all instances built on the [Nitro
            system](http://aws.amazon.com/ec2/nitro/)\.
        NodeGroupConfiguration:
          type: >-
            [list](aws-properties-elasticache-replicationgroup-nodegroupconfiguration.md)
            of
            [nodegroupconfiguration](aws-properties-elasticache-replicationgroup-nodegroupconfiguration.md)
          description: >-
            `NodeGroupConfiguration ` is a property of the
            `AWS::ElastiCache::ReplicationGroup` resource that configures an
            Amazon ElastiCache \(ElastiCache\) Redis cluster node group\.    If
            you set
            [UseOnlineResharding](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatepolicy.html#cfn-attributes-updatepolicy-useonlineresharding)
            to `true`, you can update `NodeGroupConfiguration` without
            interruption\. When `UseOnlineResharding` is set to `false`, or is
            not specified, updating `NodeGroupConfiguration` results in
            [replacement](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement)\.
        NotificationTopicArn:
          type: string
          description: >-
            The Amazon Resource Name \(ARN\) of the Amazon Simple Notification
            Service \(SNS\) topic to which notifications are sent\.   The Amazon
            SNS topic owner must be the same as the cluster owner\.
        NumCacheClusters:
          type: integer
          description: >-
            The number of clusters this replication group initially has\.   This
            parameter is not used if there is more than one node group
            \(shard\)\. You should use `ReplicasPerNodeGroup` instead\.   If
            `AutomaticFailoverEnabled` is `true`, the value of this parameter
            must be at least 2\. If `AutomaticFailoverEnabled` is `false` you
            can omit this parameter \(it will default to 1\), or you can
            explicitly set it to a value between 2 and 6\.   The maximum
            permitted value for `NumCacheClusters` is 6 \(1 primary plus 5
            replicas\)\.
        NumNodeGroups:
          type: integer
          description: >-
            An optional parameter that specifies the number of node groups
            \(shards\) for this Redis \(cluster mode enabled\) replication
            group\. For Redis \(cluster mode disabled\) either omit this
            parameter or set it to 1\.   If you set
            [UseOnlineResharding](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatepolicy.html#cfn-attributes-updatepolicy-useonlineresharding)
            to `true`, you can update `NumNodeGroups` without interruption\.
            When `UseOnlineResharding` is set to `false`, or is not specified,
            updating `NumNodeGroups` results in
            [replacement](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement)\.  
            Default: 1
        Port:
          type: integer
          description: >-
            The port number on which each member of the replication group
            accepts connections\.
        PreferredCacheClusterAZs:
          type: array
          description: >-
            A list of EC2 Availability Zones in which the replication group's
            clusters are created\. The order of the Availability Zones in the
            list is the order in which clusters are allocated\. The primary
            cluster is created in the first AZ in the list\.   This parameter is
            not used if there is more than one node group \(shard\)\. You should
            use `NodeGroupConfiguration` instead\.   If you are creating your
            replication group in an Amazon VPC \(recommended\), you can only
            locate clusters in Availability Zones associated with the subnets in
            the selected subnet group\.   The number of Availability Zones
            listed must equal the value of `NumCacheClusters`\. Default: system
            chosen Availability Zones\.
        PreferredMaintenanceWindow:
          type: string
          description: >-
            Specifies the weekly time range during which maintenance on the
            cluster is performed\. It is specified as a range in the format
            ddd:hh24:mi\-ddd:hh24:mi \(24H Clock UTC\)\. The minimum maintenance
            window is a 60 minute period\.   Valid values for `ddd` are:   + 
            `sun`  +  `mon`  +  `tue`  +  `wed`  +  `thu`  +  `fri`  +  `sat` 
            Example: `sun:23:00-mon:01:30`
        PrimaryClusterId:
          type: string
          description: >-
            The identifier of the cluster that serves as the primary for this
            replication group\. This cluster must already exist and have a
            status of `available`\.   This parameter is not required if
            `NumCacheClusters`, `NumNodeGroups`, or `ReplicasPerNodeGroup` is
            specified\.
        ReplicasPerNodeGroup:
          type: integer
          description: >-
            An optional parameter that specifies the number of replica nodes in
            each node group \(shard\)\. Valid values are 0 to 5\.
        ReplicationGroupDescription:
          type: string
          description: A user\-created description for the replication group\.
        ReplicationGroupId:
          type: string
          description: >-
            The replication group identifier\. This parameter is stored as a
            lowercase string\.   Constraints:   + A name must contain from 1 to
            40 alphanumeric characters or hyphens\. + The first character must
            be a letter\. + A name cannot end with a hyphen or contain two
            consecutive hyphens\.
        SecurityGroupIds:
          type: array
          description: >-
            One or more Amazon VPC security groups associated with this
            replication group\.   Use this parameter only when you are creating
            a replication group in an Amazon Virtual Private Cloud \(Amazon
            VPC\)\.
        SnapshotArns:
          type: array
          description: >-
            A list of Amazon Resource Names \(ARN\) that uniquely identify the
            Redis RDB snapshot files stored in Amazon S3\. The snapshot files
            are used to populate the new replication group\. The Amazon S3
            object name in the ARN cannot contain any commas\. The new
            replication group will have the number of node groups \(console:
            shards\) specified by the parameter *NumNodeGroups* or the number of
            node groups configured by *NodeGroupConfiguration* regardless of the
            number of ARNs specified here\.   Example of an Amazon S3 ARN:
            `arn:aws:s3:::my_bucket/snapshot1.rdb`
        SnapshotName:
          type: string
          description: >-
            The name of a snapshot from which to restore data into the new
            replication group\. The snapshot status changes to `restoring` while
            the new replication group is being created\.
        SnapshotRetentionLimit:
          type: integer
          description: >-
            The number of days for which ElastiCache retains automatic snapshots
            before deleting them\. For example, if you set
            `SnapshotRetentionLimit` to 5, a snapshot that was taken today is
            retained for 5 days before being deleted\.   Default: 0 \(i\.e\.,
            automatic backups are disabled for this cluster\)\.
        SnapshottingClusterId:
          type: string
          description: >-
            The cluster ID that is used as the daily snapshot source for the
            replication group\. This parameter cannot be set for Redis \(cluster
            mode enabled\) replication groups\.
        SnapshotWindow:
          type: string
          description: >-
            The daily time range \(in UTC\) during which ElastiCache begins
            taking a daily snapshot of your node group \(shard\)\.   Example:
            `05:00-09:00`    If you do not specify this parameter, ElastiCache
            automatically chooses an appropriate time range\.
        Tags:
          type: >-
            list of
            [tag](https://docs.aws.amazon.com/awscloudformation/latest/userguide/aws-properties-resource-tags.html)
          description: >-
            A list of tags to be added to this resource\. Tags are
            comma\-separated key,value pairs \(e\.g\. Key=`myKey`,
            Value=`myKeyValue`\. You can include multiple tags as shown
            following: Key=`myKey`, Value=`myKeyValue` Key=`mySecondKey`,
            Value=`mySecondKeyValue`\. Tags on replication groups will be
            replicated to all nodes\.
        TransitEncryptionEnabled:
          type: boolean
          description: >-
            A flag that enables in\-transit encryption when set to `true`\.  
            You cannot modify the value of `TransitEncryptionEnabled` after the
            cluster is created\. To enable in\-transit encryption on a cluster
            you must set `TransitEncryptionEnabled` to `true` when you create a
            cluster\.   This parameter is valid only if the `Engine` parameter
            is `redis`, the `EngineVersion` parameter is `3.2.6` or `4.x`
            onward, and the cluster is being created in an Amazon VPC\.   If you
            enable in\-transit encryption, you must also specify a value for
            `CacheSubnetGroup`\.    **Required:** Only available when creating a
            replication group in an Amazon VPC using redis version `3.2.6` or
            `4.x` onward\.   Default: `false`    For HIPAA compliance, you must
            specify `TransitEncryptionEnabled` as `true`, an `AuthToken`, and a
            `CacheSubnetGroup`\.
        TransitEncryptionMode:
          type: string
          description: >-
            A setting that allows you to migrate your clients to use in\-transit
            encryption, with no downtime\.   When setting
            `TransitEncryptionEnabled` to `true`, you can set your
            `TransitEncryptionMode` to `preferred` in the same request, to allow
            both encrypted and unencrypted connections at the same time\. Once
            you migrate all your Redis clients to use encrypted connections you
            can modify the value to `required` to allow encrypted connections
            only\.   Setting `TransitEncryptionMode` to `required` is a
            two\-step process that requires you to first set the
            `TransitEncryptionMode` to `preferred`, after that you can set
            `TransitEncryptionMode` to `required`\.
        UserGroupIds:
          type: array
          description: The ID of user group to associate with the replication group\.
      required:
        - ReplicationGroupDescription
    SecurityGroup:
      type: object
      properties:
        Description:
          type: string
          description: A description for the cache security group\.
        Tags:
          type: >-
            list of
            [tag](https://docs.aws.amazon.com/awscloudformation/latest/userguide/aws-properties-resource-tags.html)
          description: >-
            A tag that can be added to an ElastiCache security group\. Tags are
            composed of a Key/Value pair\. You can use tags to categorize and
            track all your security groups\. A tag with a null Value is
            permitted\.
      required:
        - Description
    SecurityGroupIngress:
      type: object
      properties:
        CacheSecurityGroupName:
          type: string
          description: The name of the Cache Security Group to authorize\.
        EC2SecurityGroupName:
          type: string
          description: Name of the EC2 Security Group to include in the authorization\.
        EC2SecurityGroupOwnerId:
          type: string
          description: >-
            Specifies the Amazon Account ID of the owner of the EC2 security
            group specified in the EC2SecurityGroupName property\. The Amazon
            access key ID is not an acceptable value\.
      required:
        - CacheSecurityGroupName
        - EC2SecurityGroupName
    SubnetGroup:
      type: object
      properties:
        CacheSubnetGroupName:
          type: string
          description: >-
            The name for the cache subnet group\. This value is stored as a
            lowercase string\.   Constraints: Must contain no more than 255
            alphanumeric characters or hyphens\.   Example: `mysubnetgroup`
        Description:
          type: string
          description: The description for the cache subnet group\.
        SubnetIds:
          type: array
          description: The EC2 subnet IDs for the cache subnet group\.
        Tags:
          type: >-
            list of
            [tag](https://docs.aws.amazon.com/awscloudformation/latest/userguide/aws-properties-resource-tags.html)
          description: >-
            A tag that can be added to an ElastiCache subnet group\. Tags are
            composed of a Key/Value pair\. You can use tags to categorize and
            track all your subnet groups\. A tag with a null Value is
            permitted\.
      required:
        - Description
        - SubnetIds
    User:
      type: object
      properties:
        AccessString:
          type: string
          description: Access permissions string used for this user\.
        AuthenticationMode:
          description: >-
            Specifies the authentication mode to use\. Below is an example of
            the possible JSON values:
        undefined:
          type: >-
            [authenticationmode](aws-properties-elasticache-user-authenticationmode.md)
          description: >-
            ``` {  Type: <iam | no-password-required | password>  Passwords:
            ["*****", "******"] // If Type is password. } ```
        Engine:
          type: string
          description: The current supported value is redis\.
        NoPasswordRequired:
          type: boolean
          description: Indicates a password is not required for this user\.
        Passwords:
          type: array
          description: >-
            Passwords used for this user\. You can create up to two passwords
            for each user\.
        UserId:
          type: string
          description: The ID of the user\.
        UserName:
          type: string
          description: The username of the user\.
      required:
        - Engine
        - UserId
        - UserName
    UserGroup:
      type: object
      properties:
        Engine:
          type: string
          description: The current supported value is redis\.
        UserGroupId:
          type: string
          description: The ID of the user group\.
        UserIds:
          type: array
          description: >-
            The list of user IDs that belong to the user group\. A user named
            `default` must be included\.
      required:
        - Engine
        - UserGroupId
paths: {}
