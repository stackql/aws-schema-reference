openapi: 3.0.0
servers: []
info:
  title: Lambda
  description: AWS CloudFormation Resource Specification
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2023-03-08-stackql-generated
components:
  schemas:
    Alias:
      type: object
      properties:
        Description:
          type: string
          description: A description of the alias\.
        FunctionName:
          description: The name of the Lambda function\.
        undefined:
          type: string
          description: >-
            **Name formats** +  **Function name** \- `MyFunction`\. + 
            **Function ARN** \-
            `arn:aws:lambda:us-west-2:123456789012:function:MyFunction`\. + 
            **Partial ARN** \- `123456789012:function:MyFunction`\. The length
            constraint applies only to the full ARN\. If you specify only the
            function name, it is limited to 64 characters in length\.
        FunctionVersion:
          type: string
          description: The function version that the alias invokes\.
        Name:
          type: string
          description: The name of the alias\.
        ProvisionedConcurrencyConfig:
          type: >-
            [provisionedconcurrencyconfiguration](aws-properties-lambda-alias-provisionedconcurrencyconfiguration.md)
          description: >-
            Specifies a [provisioned
            concurrency](https://docs.aws.amazon.com/lambda/latest/dg/configuration-concurrency.html)
            configuration for a function's alias\.
        RoutingConfig:
          type: >-
            [aliasroutingconfiguration](aws-properties-lambda-alias-aliasroutingconfiguration.md)
          description: >-
            The [routing
            configuration](https://docs.aws.amazon.com/lambda/latest/dg/lambda-traffic-shifting-using-aliases.html)
            of the alias\.
      required:
        - null
        - FunctionVersion
        - Name
    CodeSigningConfig:
      type: object
      properties:
        AllowedPublishers:
          type: >-
            [allowedpublishers](aws-properties-lambda-codesigningconfig-allowedpublishers.md)
          description: List of allowed publishers\.
        CodeSigningPolicies:
          type: >-
            [codesigningpolicies](aws-properties-lambda-codesigningconfig-codesigningpolicies.md)
          description: >-
            The code signing policy controls the validation failure action for
            signature mismatch or expiry\.
        Description:
          type: string
          description: Code signing configuration description\.
      required:
        - AllowedPublishers
    EventInvokeConfig:
      type: object
      properties:
        DestinationConfig:
          description: >-
            A destination for events after they have been sent to a function for
            processing\.
        undefined:
          type: >-
            [destinationconfig](aws-properties-lambda-eventinvokeconfig-destinationconfig.md)
          description: >-
            **Destinations** +  **Function** \- The Amazon Resource Name \(ARN\)
            of a Lambda function\. +  **Queue** \- The ARN of an SQS queue\. + 
            **Topic** \- The ARN of an SNS topic\. +  **Event Bus** \- The ARN
            of an Amazon EventBridge event bus\.
        FunctionName:
          type: string
          description: The name of the Lambda function\.
        MaximumEventAgeInSeconds:
          type: integer
          description: >-
            The maximum age of a request that Lambda sends to a function for
            processing\.
        MaximumRetryAttempts:
          type: integer
          description: >-
            The maximum number of times to retry when the function returns an
            error\.
        Qualifier:
          type: string
          description: >-
            The identifier of a version or alias\.   + **Version** \- A version
            number\. + **Alias** \- An alias name\. + **Latest** \- To specify
            the unpublished version, use `$LATEST`\.
      required:
        - FunctionName
        - Qualifier
    EventSourceMapping:
      type: object
      properties:
        AmazonManagedKafkaEventSourceConfig:
          type: >-
            [amazonmanagedkafkaeventsourceconfig](aws-properties-lambda-eventsourcemapping-amazonmanagedkafkaeventsourceconfig.md)
          description: >-
            Specific configuration settings for an Amazon Managed Streaming for
            Apache Kafka \(Amazon MSK\) event source\.
        BatchSize:
          type: integer
          description: >-
            The maximum number of records in each batch that Lambda pulls from
            your stream or queue and sends to your function\. Lambda passes all
            of the records in the batch to the function in a single call, up to
            the payload limit for synchronous invocation \(6 MB\)\.   + 
            **Amazon Kinesis** – Default 100\. Max 10,000\. +  **Amazon DynamoDB
            Streams** – Default 100\. Max 10,000\. +  **Amazon Simple Queue
            Service** – Default 10\. For standard queues the max is 10,000\. For
            FIFO queues the max is 10\. +  **Amazon Managed Streaming for Apache
            Kafka** – Default 100\. Max 10,000\. +  **Self\-managed Apache
            Kafka** – Default 100\. Max 10,000\. +  **Amazon MQ \(ActiveMQ and
            RabbitMQ\)** – Default 100\. Max 10,000\.
        BisectBatchOnFunctionError:
          type: boolean
          description: >-
            \(Streams only\) If the function returns an error, split the batch
            in two and retry\. The default value is false\.
        DestinationConfig:
          type: >-
            [destinationconfig](aws-properties-lambda-eventsourcemapping-destinationconfig.md)
          description: >-
            \(Streams only\) An Amazon SQS queue or Amazon SNS topic destination
            for discarded records\.
        Enabled:
          type: boolean
          description: >-
            When true, the event source mapping is active\. When false, Lambda
            pauses polling and invocation\.   Default: True
        EventSourceArn:
          type: string
          description: >-
            The Amazon Resource Name \(ARN\) of the event source\.   +  **Amazon
            Kinesis** – The ARN of the data stream or a stream consumer\. + 
            **Amazon DynamoDB Streams** – The ARN of the stream\. +  **Amazon
            Simple Queue Service** – The ARN of the queue\. +  **Amazon Managed
            Streaming for Apache Kafka** – The ARN of the cluster\. +  **Amazon
            MQ** – The ARN of the broker\.
        FilterCriteria:
          type: >-
            [filtercriteria](aws-properties-lambda-eventsourcemapping-filtercriteria.md)
          description: >-
            An object that defines the filter criteria that determine whether
            Lambda should process an event\. For more information, see [Lambda
            event
            filtering](https://docs.aws.amazon.com/lambda/latest/dg/invocation-eventfiltering.html)\.
        FunctionName:
          description: The name of the Lambda function\.
        undefined:
          type: string
          description: >-
            **Name formats** +  **Function name** – `MyFunction`\. +  **Function
            ARN** –
            `arn:aws:lambda:us-west-2:123456789012:function:MyFunction`\. + 
            **Version or Alias ARN** –
            `arn:aws:lambda:us-west-2:123456789012:function:MyFunction:PROD`\.
            +  **Partial ARN** – `123456789012:function:MyFunction`\. The length
            constraint applies only to the full ARN\. If you specify only the
            function name, it's limited to 64 characters in length\.
        FunctionResponseTypes:
          type: array
          description: >-
            \(Streams and SQS\) A list of current response type enums applied to
            the event source mapping\.   Valid Values: `ReportBatchItemFailures`
        MaximumBatchingWindowInSeconds:
          type: integer
          description: >-
            The maximum amount of time, in seconds, that Lambda spends gathering
            records before invoking the function\.   **Default \(Kinesis,
            DynamoDB, Amazon SQS event sources\)**: 0   **Default \(Amazon MSK,
            Kafka, Amazon MQ event sources\)**: 500 ms   **Related setting: **
            When you set `BatchSize` to a value greater than 10, you must set
            `MaximumBatchingWindowInSeconds` to at least 1\.
        MaximumRecordAgeInSeconds:
          type: integer
          description: >-
            \(Streams only\) Discard records older than the specified age\. The
            default value is \-1, which sets the maximum age to infinite\. When
            the value is set to infinite, Lambda never discards old records\.
        MaximumRetryAttempts:
          type: integer
          description: >-
            \(Streams only\) Discard records after the specified number of
            retries\. The default value is \-1, which sets the maximum number of
            retries to infinite\. When MaximumRetryAttempts is infinite, Lambda
            retries failed records until the record expires in the event
            source\.
        ParallelizationFactor:
          type: integer
          description: >-
            \(Streams only\) The number of batches to process concurrently from
            each shard\. The default value is 1\.
        Queues:
          type: array
          description: >-
            \(Amazon MQ\) The name of the Amazon MQ broker destination queue to
            consume\.
        ScalingConfig:
          type: >-
            [scalingconfig](aws-properties-lambda-eventsourcemapping-scalingconfig.md)
          description: >-
            \(Amazon Simple Queue Service only\) The scaling configuration for
            the event source\. For more information, see [Configuring maximum
            concurrency for Amazon SQS event
            sources](https://docs.aws.amazon.com/lambda/latest/dg/with-sqs.html#events-sqs-max-concurrency)\.
        SelfManagedEventSource:
          type: >-
            [selfmanagedeventsource](aws-properties-lambda-eventsourcemapping-selfmanagedeventsource.md)
          description: The self\-managed Apache Kafka cluster for your event source\.
        SelfManagedKafkaEventSourceConfig:
          type: >-
            [selfmanagedkafkaeventsourceconfig](aws-properties-lambda-eventsourcemapping-selfmanagedkafkaeventsourceconfig.md)
          description: >-
            Specific configuration settings for a self\-managed Apache Kafka
            event source\.
        SourceAccessConfigurations:
          type: >-
            list of
            [sourceaccessconfiguration](aws-properties-lambda-eventsourcemapping-sourceaccessconfiguration.md)
          description: >-
            An array of the authentication protocol, VPC components, or virtual
            host to secure and define your event source\.
        StartingPosition:
          type: string
          description: >-
            The position in a stream from which to start reading\. Required for
            Amazon Kinesis and Amazon DynamoDB\.   + **LATEST** \- Read only new
            records\. + **TRIM\_HORIZON** \- Process all available records\. +
            **AT\_TIMESTAMP** \- Specify a time from which to start reading
            records\.
        StartingPositionTimestamp:
          type: double
          description: >-
            With `StartingPosition` set to `AT_TIMESTAMP`, the time from which
            to start reading, in Unix time seconds\.
        Topics:
          type: array
          description: The name of the Kafka topic\.
        TumblingWindowInSeconds:
          type: integer
          description: >-
            \(Streams only\) The duration in seconds of a processing window\.
            The range is between 1 second and 900 seconds\.
      required:
        - null
    Function:
      type: object
      properties:
        Architectures:
          type: array
          description: >-
            The instruction set architecture that the function supports\. Enter
            a string array with one of the valid values \(arm64 or x86\_64\)\.
            The default value is `x86_64`\.
        Code:
          type: '[code](aws-properties-lambda-function-code.md)'
          description: The code for the function\.
        CodeSigningConfigArn:
          type: string
          description: >-
            To enable code signing for this function, specify the ARN of a
            code\-signing configuration\. A code\-signing configuration includes
            a set of signing profiles, which define the trusted publishers for
            this function\.
        DeadLetterConfig:
          type: >-
            [deadletterconfig](aws-properties-lambda-function-deadletterconfig.md)
          description: >-
            A dead\-letter queue configuration that specifies the queue or topic
            where Lambda sends asynchronous events when they fail processing\.
            For more information, see [Dead\-letter
            queues](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-dlq)\.
        Description:
          type: string
          description: A description of the function\.
        Environment:
          type: '[environment](aws-properties-lambda-function-environment.md)'
          description: >-
            Environment variables that are accessible from function code during
            execution\.
        EphemeralStorage:
          type: >-
            [ephemeralstorage](aws-properties-lambda-function-ephemeralstorage.md)
          description: >-
            The size of the function's `/tmp` directory in MB\. The default
            value is 512, but it can be any whole number between 512 and 10,240
            MB\.
        FileSystemConfigs:
          type: >-
            list of
            [filesystemconfig](aws-properties-lambda-function-filesystemconfig.md)
          description: >-
            Connection settings for an Amazon EFS file system\. To connect a
            function to a file system, a mount target must be available in every
            Availability Zone that your function connects to\. If your template
            contains an
            [AWS::EFS::MountTarget](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-mounttarget.html)
            resource, you must also specify a `DependsOn` attribute to ensure
            that the mount target is created or updated before the function\.  
            For more information about using the `DependsOn` attribute, see
            [DependsOn
            Attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html)\.
        FunctionName:
          type: string
          description: >-
            The name of the Lambda function, up to 64 characters in length\. If
            you don't specify a name, AWS CloudFormation generates one\.   If
            you specify a name, you cannot perform updates that require
            replacement of this resource\. You can perform updates that require
            no or some interruption\. If you must replace the resource, specify
            a new name\.
        Handler:
          type: string
          description: >-
            The name of the method within your code that Lambda calls to run
            your function\. Handler is required if the deployment package is a
            \.zip file archive\. The format includes the file name\. It can also
            include namespaces and other qualifiers, depending on the runtime\.
            For more information, see [Lambda programming
            model](https://docs.aws.amazon.com/lambda/latest/dg/foundation-progmodel.html)\.
        ImageConfig:
          type: '[imageconfig](aws-properties-lambda-function-imageconfig.md)'
          description: >-
            Configuration values that override the container image Dockerfile
            settings\. For more information, see [Container image
            settings](https://docs.aws.amazon.com/lambda/latest/dg/images-create.html#images-parms)\.
        KmsKeyArn:
          type: string
          description: >-
            The ARN of the AWS Key Management Service \(AWS KMS\) customer
            managed key that's used to encrypt your function's [environment
            variables](https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html#configuration-envvars-encryption)\.
            When [Lambda
            SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart-security.html)
            is activated, this key is also used to encrypt your function's
            snapshot\. If you don't provide a customer managed key, Lambda uses
            a default service key\.
        Layers:
          type: array
          description: >-
            A list of [function
            layers](https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html)
            to add to the function's execution environment\. Specify each layer
            by its ARN, including the version\.
        MemorySize:
          type: integer
          description: >-
            The amount of [memory available to the
            function](https://docs.aws.amazon.com/lambda/latest/dg/configuration-function-common.html#configuration-memory-console)
            at runtime\. Increasing the function memory also increases its CPU
            allocation\. The default value is 128 MB\. The value can be any
            multiple of 1 MB\.
        PackageType:
          type: string
          description: >-
            The type of deployment package\. Set to `Image` for container image
            and set `Zip` for \.zip file archive\.
        ReservedConcurrentExecutions:
          type: integer
          description: The number of simultaneous executions to reserve for the function\.
        Role:
          type: string
          description: The Amazon Resource Name \(ARN\) of the function's execution role\.
        Runtime:
          type: string
          description: >-
            The identifier of the function's
            [runtime](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html)\.
            Runtime is required if the deployment package is a \.zip file
            archive\.   The following list includes deprecated runtimes\. For
            more information, see [Runtime deprecation
            policy](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtime-support-policy)\.
        RuntimeManagementConfig:
          type: >-
            [runtimemanagementconfig](aws-properties-lambda-function-runtimemanagementconfig.md)
          description: >-
            Sets the runtime management configuration for a function's version\.
            For more information, see [Runtime
            updates](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html)\.
        SnapStart:
          type: '[snapstart](aws-properties-lambda-function-snapstart.md)'
          description: >-
            The function's [AWS Lambda
            SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart.html)
            setting\.
        Tags:
          type: >-
            list of
            [tag](https://docs.aws.amazon.com/awscloudformation/latest/userguide/aws-properties-resource-tags.html)
          description: >-
            A list of
            [tags](https://docs.aws.amazon.com/lambda/latest/dg/tagging.html) to
            apply to the function\.
        Timeout:
          type: integer
          description: >-
            The amount of time \(in seconds\) that Lambda allows a function to
            run before stopping it\. The default is 3 seconds\. The maximum
            allowed value is 900 seconds\. For more information, see [Lambda
            execution
            environment](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-context.html)\.
        TracingConfig:
          type: '[tracingconfig](aws-properties-lambda-function-tracingconfig.md)'
          description: >-
            Set `Mode` to `Active` to sample and trace a subset of incoming
            requests with
            [X\-Ray](https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html)\.
        VpcConfig:
          type: '[vpcconfig](aws-properties-lambda-function-vpcconfig.md)'
          description: >-
            For network connectivity to AWS resources in a
            [VPC](https://docs.aws.amazon.com/lambda/latest/dg/configuration-network.html),
            specify a list of security groups and subnets in the VPC\.
      required:
        - Code
        - Role
    LayerVersion:
      type: object
      properties:
        CompatibleArchitectures:
          type: array
          description: >-
            A list of compatible [instruction set
            architectures](https://docs.aws.amazon.com/lambda/latest/dg/foundation-arch.html)\.
        CompatibleRuntimes:
          type: array
          description: >-
            A list of compatible [function
            runtimes](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html)\.
            Used for filtering with
            [ListLayers](https://docs.aws.amazon.com/lambda/latest/dg/API_ListLayers.html)
            and
            [ListLayerVersions](https://docs.aws.amazon.com/lambda/latest/dg/API_ListLayerVersions.html)\.
        Content:
          type: '[content](aws-properties-lambda-layerversion-content.md)'
          description: The function layer archive\.
        Description:
          type: string
          description: The description of the version\.
        LayerName:
          type: string
          description: The name or Amazon Resource Name \(ARN\) of the layer\.
        LicenseInfo:
          type: string
          description: >-
            The layer's software license\. It can be any of the following:   +
            An [SPDX license identifier](https://spdx.org/licenses/)\. For
            example, `MIT`\. + The URL of a license hosted on the internet\. For
            example, `https://opensource.org/licenses/MIT`\. + The full text of
            the license\.
      required:
        - Content
    LayerVersionPermission:
      type: object
      properties:
        Action:
          type: string
          description: >-
            The API action that grants access to the layer\. For example,
            `lambda:GetLayerVersion`\.
        LayerVersionArn:
          type: string
          description: The name or Amazon Resource Name \(ARN\) of the layer\.
        OrganizationId:
          type: string
          description: >-
            With the principal set to `*`, grant permission to all accounts in
            the specified organization\.
        Principal:
          type: string
          description: >-
            An account ID, or `*` to grant layer usage permission to all
            accounts in an organization, or all AWS accounts \(if
            `organizationId` is not specified\)\. For the last case, make sure
            that you really do want all AWS accounts to have usage permission to
            this layer\.
      required:
        - Action
        - LayerVersionArn
        - Principal
    Permission:
      type: object
      properties:
        Action:
          type: string
          description: >-
            The action that the principal can use on the function\. For example,
            `lambda:InvokeFunction` or `lambda:GetFunction`\.
        EventSourceToken:
          type: string
          description: >-
            For Alexa Smart Home functions, a token that the invoker must
            supply\.
        FunctionName:
          description: The name of the Lambda function, version, or alias\.
        undefined:
          type: string
          description: >-
            **Name formats** +  **Function name** – `my-function`
            \(name\-only\), `my-function:v1` \(with alias\)\. +  **Function
            ARN** –
            `arn:aws:lambda:us-west-2:123456789012:function:my-function`\. + 
            **Partial ARN** – `123456789012:function:my-function`\. You can
            append a version number or alias to any of the formats\. The length
            constraint applies only to the full ARN\. If you specify only the
            function name, it is limited to 64 characters in length\.
        FunctionUrlAuthType:
          type: string
          description: >-
            The type of authentication that your function URL uses\. Set to
            `AWS_IAM` if you want to restrict access to authenticated users
            only\. Set to `NONE` if you want to bypass IAM authentication to
            create a public endpoint\. For more information, see [Security and
            auth model for Lambda function
            URLs](https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html)\.
        Principal:
          type: string
          description: >-
            The AWS service or AWS account that invokes the function\. If you
            specify a service, use `SourceArn` or `SourceAccount` to limit who
            can invoke the function through that service\.
        PrincipalOrgID:
          type: string
          description: >-
            The identifier for your organization in AWS Organizations\. Use this
            to grant permissions to all the AWS accounts under this
            organization\.
        SourceAccount:
          type: string
          description: >-
            For AWS service, the ID of the AWS account that owns the resource\.
            Use this together with `SourceArn` to ensure that the specified
            account owns the resource\. It is possible for an Amazon S3 bucket
            to be deleted by its owner and recreated by another account\.
        SourceArn:
          type: string
          description: >-
            For AWS services, the ARN of the AWS resource that invokes the
            function\. For example, an Amazon S3 bucket or Amazon SNS topic\.  
            Note that Lambda configures the comparison using the `StringLike`
            operator\.
      required:
        - Action
        - null
        - Principal
    Url:
      type: object
      properties:
        AuthType:
          type: string
          description: >-
            The type of authentication that your function URL uses\. Set to
            `AWS_IAM` if you want to restrict access to authenticated users
            only\. Set to `NONE` if you want to bypass IAM authentication to
            create a public endpoint\. For more information, see [Security and
            auth model for Lambda function
            URLs](https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html)\.
        Cors:
          type: '[cors](aws-properties-lambda-url-cors.md)'
          description: >-
            The [Cross\-Origin Resource Sharing
            \(CORS\)](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS)
            settings for your function URL\.
        InvokeMode:
          type: string
          description: Property description not available\.
        Qualifier:
          type: string
          description: The alias name\.
        TargetFunctionArn:
          description: The name of the Lambda function\.
        undefined:
          type: string
          description: >-
            **Name formats** + **Function name** \- `my-function`\. + **Function
            ARN** \-
            `arn:aws:lambda:us-west-2:123456789012:function:my-function`\. +
            **Partial ARN** \- `123456789012:function:my-function`\. The length
            constraint applies only to the full ARN\. If you specify only the
            function name, it is limited to 64 characters in length\.
      required:
        - AuthType
        - null
    Version:
      type: object
      properties:
        CodeSha256:
          type: string
          description: >-
            Only publish a version if the hash value matches the value that's
            specified\. Use this option to avoid publishing a version if the
            function code has changed since you last updated it\. Updates are
            not supported for this property\.
        Description:
          type: string
          description: >-
            A description for the version to override the description in the
            function configuration\. Updates are not supported for this
            property\.
        FunctionName:
          description: The name of the Lambda function\.
        undefined:
          type: string
          description: >-
            **Name formats** +  **Function name** \- `MyFunction`\. + 
            **Function ARN** \-
            `arn:aws:lambda:us-west-2:123456789012:function:MyFunction`\. + 
            **Partial ARN** \- `123456789012:function:MyFunction`\. The length
            constraint applies only to the full ARN\. If you specify only the
            function name, it is limited to 64 characters in length\.
        ProvisionedConcurrencyConfig:
          type: >-
            [provisionedconcurrencyconfiguration](aws-properties-lambda-version-provisionedconcurrencyconfiguration.md)
          description: >-
            Specifies a provisioned concurrency configuration for a function's
            version\. Updates are not supported for this property\.
      required:
        - null
paths: {}
