openapi: 3.0.0
servers: []
info:
  title: SecretsManager
  description: AWS CloudFormation Resource Specification
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2023-03-08-stackql-generated
components:
  schemas:
    ResourcePolicy:
      type: object
      properties:
        BlockPublicPolicy:
          type: boolean
          description: >-
            Specifies whether to block resource\-based policies that allow broad
            access to the secret\. By default, Secrets Manager blocks policies
            that allow broad access, for example those that use a wildcard for
            the principal\.
        ResourcePolicy:
          type: object
          description: >-
            A JSON\-formatted string for an AWS resource\-based policy\. For
            example policies, see [Permissions policy
            examples](https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_examples.html)\.
        SecretId:
          type: string
          description: >-
            The ARN or name of the secret to attach the resource\-based
            policy\.   For an ARN, we recommend that you specify a complete ARN
            rather than a partial ARN\.
      required:
        - ResourcePolicy
        - SecretId
    RotationSchedule:
      type: object
      properties:
        HostedRotationLambda:
          type: >-
            [hostedrotationlambda](aws-properties-secretsmanager-rotationschedule-hostedrotationlambda.md)
          description: >-
            Creates a new Lambda rotation function based on one of the [ Secrets
            Manager rotation function
            templates](https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_available-rotation-templates.html)\.
            To use a rotation function that already exists, specify
            `RotationLambdaARN` instead\.   For Amazon RDS master user
            credentials, see [AWS::RDS::DBCluster
            MasterUserSecret](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html)\.
        RotateImmediatelyOnUpdate:
          type: boolean
          description: >-
            Specifies whether to rotate the secret immediately or wait until the
            next scheduled rotation window\. The rotation schedule is defined in
            `RotationRules`\.   If you don't immediately rotate the secret,
            Secrets Manager tests the rotation configuration by running the
            [`testSecret`
            step](https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotate-secrets_how.html)
            of the Lambda rotation function\. The test creates an `AWSPENDING`
            version of the secret and then removes it\.   If you don't specify
            this value, then by default, Secrets Manager rotates the secret
            immediately\.   Rotation is an asynchronous process\. For more
            information, see [How rotation
            works](https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotate-secrets_how.html)\.
        RotationLambdaARN:
          type: string
          description: >-
            The ARN of an existing Lambda rotation function\. To specify a
            rotation function that is also defined in this template, use the
            [Ref](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-ref.html)
            function\.   For Amazon RDS master user credentials, see
            [AWS::RDS::DBCluster
            MasterUserSecret](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html)\.  
            To create a new rotation function based on one of the [ Secrets
            Manager rotation function
            templates](https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_available-rotation-templates.html),
            specify `HostedRotationLambda` instead\.
        RotationRules:
          type: >-
            [rotationrules](aws-properties-secretsmanager-rotationschedule-rotationrules.md)
          description: >-
            A structure that defines the rotation configuration for this
            secret\.
        SecretId:
          type: string
          description: >-
            The ARN or name of the secret to rotate\.    To reference a secret
            also created in this template, use the
            [Ref](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-ref.html)
            function with the secret's logical ID\.
      required:
        - SecretId
    Secret:
      type: object
      properties:
        Description:
          type: string
          description: The description of the secret\.
        GenerateSecretString:
          type: >-
            [generatesecretstring](aws-properties-secretsmanager-secret-generatesecretstring.md)
          description: >-
            A structure that specifies how to generate a password to encrypt and
            store in the secret\. To include a specific string in the secret,
            use `SecretString` instead\. If you omit both `GenerateSecretString`
            and `SecretString`, you create an empty secret\. When you make a
            change to this property, a new secret version is created\.   We
            recommend that you specify the maximum length and include every
            character type that the system you are generating a password for can
            support\.
        KmsKeyId:
          type: string
          description: >-
            The ARN, key ID, or alias of the AWS KMS key that Secrets Manager
            uses to encrypt the secret value in the secret\. An alias is always
            prefixed by `alias/`, for example `alias/aws/secretsmanager`\. For
            more information, see [About
            aliases](https://docs.aws.amazon.com/kms/latest/developerguide/alias-about.html)\.  
            To use a AWS KMS key in a different account, use the key ARN or the
            alias ARN\.   If you don't specify this value, then Secrets Manager
            uses the key `aws/secretsmanager`\. If that key doesn't yet exist,
            then Secrets Manager creates it for you automatically the first time
            it encrypts the secret value\.   If the secret is in a different AWS
            account from the credentials calling the API, then you can't use
            `aws/secretsmanager` to encrypt the secret, and you must create and
            use a customer managed AWS KMS key\.
        Name:
          type: string
          description: >-
            The name of the new secret\.   The secret name can contain ASCII
            letters, numbers, and the following characters: /\_\+=\.@\-   Do not
            end your secret name with a hyphen followed by six characters\. If
            you do so, you risk confusion and unexpected results when searching
            for a secret by partial ARN\. Secrets Manager automatically adds a
            hyphen and six random characters after the secret name at the end of
            the ARN\.
        ReplicaRegions:
          type: >-
            list of
            [replicaregion](aws-properties-secretsmanager-secret-replicaregion.md)
          description: >-
            A custom type that specifies a `Region` and the `KmsKeyId` for a
            replica secret\.
        SecretString:
          type: string
          description: >-
            The text to encrypt and store in the secret\. We recommend you use a
            JSON structure of key/value pairs for your secret value\. To
            generate a random password, use `GenerateSecretString` instead\. If
            you omit both `GenerateSecretString` and `SecretString`, you create
            an empty secret\. When you make a change to this property, a new
            secret version is created\.
        Tags:
          type: >-
            list of
            [tag](https://docs.aws.amazon.com/awscloudformation/latest/userguide/aws-properties-resource-tags.html)
          description: >-
            A list of tags to attach to the secret\. Each tag is a key and value
            pair of strings in a JSON text string, for example:   
            `[{"Key":"CostCenter","Value":"12345"},{"Key":"environment","Value":"production"}]`   
            Secrets Manager tag key names are case sensitive\. A tag with the
            key "ABC" is a different tag from one with key "abc"\.   If you
            check tags in permissions policies as part of your security
            strategy, then adding or removing a tag can change permissions\. If
            the completion of this operation would result in you losing your
            permissions for this secret, then Secrets Manager blocks the
            operation and returns an `Access Denied` error\. For more
            information, see [Control access to secrets using
            tags](https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_examples.html#tag-secrets-abac)
            and [Limit access to identities with tags that match secrets'
            tags](https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_examples.html#auth-and-access_tags2)\.  
            For information about how to format a JSON parameter for the various
            command line tool environments, see [Using JSON for
            Parameters](https://docs.aws.amazon.com/cli/latest/userguide/cli-using-param.html#cli-using-param-json)\.
            If your command\-line tool or SDK requires quotation marks around
            the parameter, you should use single quotes to avoid confusion with
            the double quotes required in the JSON text\.   The following
            restrictions apply to tags:   + Maximum number of tags per secret:
            50 + Maximum key length: 127 Unicode characters in UTF\-8 + Maximum
            value length: 255 Unicode characters in UTF\-8 + Tag keys and values
            are case sensitive\. + Do not use the `aws:` prefix in your tag
            names or values because AWS reserves it for AWS use\. You can't edit
            or delete tag names or values with this prefix\. Tags with this
            prefix do not count against your tags per secret limit\. + If you
            use your tagging schema across multiple services and resources,
            other services might have restrictions on allowed characters\.
            Generally allowed characters: letters, spaces, and numbers
            representable in UTF\-8, plus the following special characters: \+
            \- = \. \_ : / @\.
    SecretTargetAttachment:
      type: object
      properties:
        SecretId:
          type: string
          description: >-
            The ARN or name of the secret\. To reference a secret also created
            in this template, use the see
            [Ref](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-ref.html)
            function with the secret's logical ID\.
        TargetId:
          type: string
          description: The ID of the database or cluster\.
        TargetType:
          type: string
          description: >-
            A string that defines the type of service or database associated
            with the secret\. This value instructs Secrets Manager how to update
            the secret with the details of the service or database\. This value
            must be one of the following:    + AWS::RDS::DBInstance +
            AWS::RDS::DBCluster + AWS::Redshift::Cluster +
            AWS::DocDB::DBInstance + AWS::DocDB::DBCluster
      required:
        - SecretId
        - TargetId
        - TargetType
paths: {}
