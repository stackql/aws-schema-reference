openapi: 3.0.0
servers: []
info:
  title: SSM
  description: AWS CloudFormation Resource Specification
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2023-03-08-stackql-generated
components:
  schemas:
    Association:
      type: object
      properties:
        ApplyOnlyAtCronInterval:
          type: boolean
          description: >-
            By default, when you create a new association, the system runs it
            immediately after it is created and then according to the schedule
            you specified\. Specify this option if you don't want an association
            to run immediately after you create it\. This parameter is not
            supported for rate expressions\.
        AssociationName:
          type: string
          description: Specify a descriptive name for the association\.
        AutomationTargetParameterName:
          type: string
          description: >-
            Choose the parameter that will define how your automation will
            branch out\. This target is required for associations that use an
            Automation runbook and target resources by using rate controls\.
            Automation is a capability of AWS Systems Manager\.
        CalendarNames:
          type: array
          description: >-
            The names or Amazon Resource Names \(ARNs\) of the Change Calendar
            type documents your associations are gated under\. The associations
            only run when that Change Calendar is open\. For more information,
            see [AWS Systems Manager Change
            Calendar](https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-change-calendar)\.
        ComplianceSeverity:
          type: string
          description: The severity level that is assigned to the association\.
        DocumentVersion:
          type: string
          description: >-
            The version of the SSM document to associate with the target\.  
            Note the following important information\.   + State Manager doesn't
            support running associations that use a new version of a document if
            that document is shared from another account\. State Manager always
            runs the `default` version of a document if shared from another
            account, even though the Systems Manager console shows that a new
            version was processed\. If you want to run an association using a
            new version of a document shared form another account, you must set
            the document version to `default`\. + `DocumentVersion` is not valid
            for documents owned by AWS, such as `AWS-RunPatchBaseline` or
            `AWS-UpdateSSMAgent`\. If you specify `DocumentVersion` for an AWS
            document, the system returns the following error: "Error occurred
            during operation 'CreateAssociation'\." \(RequestToken: <token>,
            HandlerErrorCode: GeneralServiceException\)\.
        InstanceId:
          type: string
          description: >-
            The ID of the instance that the SSM document is associated with\.
            You must specify the `InstanceId` or `Targets` property\.  
            `InstanceId` has been deprecated\. To specify an instance ID for an
            association, use the `Targets` parameter\. If you use the parameter
            `InstanceId`, you cannot use the parameters `AssociationName`,
            `DocumentVersion`, `MaxErrors`, `MaxConcurrency`, `OutputLocation`,
            or `ScheduleExpression`\. To use these parameters, you must use the
            `Targets` parameter\.
        MaxConcurrency:
          type: string
          description: >-
            The maximum number of targets allowed to run the association at the
            same time\. You can specify a number, for example 10, or a
            percentage of the target set, for example 10%\. The default value is
            100%, which means all targets run the association at the same
            time\.   If a new managed node starts and attempts to run an
            association while Systems Manager is running `MaxConcurrency`
            associations, the association is allowed to run\. During the next
            association interval, the new managed node will process its
            association within the limit specified for `MaxConcurrency`\.
        MaxErrors:
          type: string
          description: >-
            The number of errors that are allowed before the system stops
            sending requests to run the association on additional targets\. You
            can specify either an absolute number of errors, for example 10, or
            a percentage of the target set, for example 10%\. If you specify 3,
            for example, the system stops sending requests when the fourth error
            is received\. If you specify 0, then the system stops sending
            requests after the first error is returned\. If you run an
            association on 50 managed nodes and set `MaxError` to 10%, then the
            system stops sending the request when the sixth error is
            received\.   Executions that are already running an association when
            `MaxErrors` is reached are allowed to complete, but some of these
            executions may fail as well\. If you need to ensure that there won't
            be more than max\-errors failed executions, set `MaxConcurrency` to
            1 so that executions proceed one at a time\.
        Name:
          type: string
          description: >-
            The name of the SSM document that contains the configuration
            information for the instance\. You can specify `Command` or
            `Automation` documents\. The documents can be AWS\-predefined
            documents, documents you created, or a document that is shared with
            you from another account\. For SSM documents that are shared with
            you from other AWS accounts, you must specify the complete SSM
            document ARN, in the following format:  
            `arn:partition:ssm:region:account-id:document/document-name`   For
            example:
            `arn:aws:ssm:us-east-2:12345678912:document/My-Shared-Document`  
            For AWS\-predefined documents and SSM documents you created in your
            account, you only need to specify the document name\. For example,
            `AWS-ApplyPatchBaseline` or `My-Document`\.
        OutputLocation:
          type: >-
            [instanceassociationoutputlocation](aws-properties-ssm-association-instanceassociationoutputlocation.md)
          description: >-
            An Amazon Simple Storage Service \(Amazon S3\) bucket where you want
            to store the output details of the request\.
        Parameters:
          type: object
          description: The parameters for the runtime configuration of the document\.
        ScheduleExpression:
          type: string
          description: >-
            A cron expression that specifies a schedule when the association
            runs\. The schedule runs in Coordinated Universal Time \(UTC\)\.
        ScheduleOffset:
          type: integer
          description: >-
            Number of days to wait after the scheduled day to run an
            association\.
        SyncCompliance:
          type: string
          description: >-
            The mode for generating association compliance\. You can specify
            `AUTO` or `MANUAL`\. In `AUTO` mode, the system uses the status of
            the association execution to determine the compliance status\. If
            the association execution runs successfully, then the association is
            `COMPLIANT`\. If the association execution doesn't run successfully,
            the association is `NON-COMPLIANT`\.   In `MANUAL` mode, you must
            specify the `AssociationId` as a parameter for the
            PutComplianceItems API action\. In this case, compliance data is not
            managed by State Manager\. It is managed by your direct call to the
            PutComplianceItems API action\.   By default, all associations use
            `AUTO` mode\.
        Targets:
          type: list of [target](aws-properties-ssm-association-target.md)
          description: >-
            The targets for the association\. You must specify the `InstanceId`
            or `Targets` property\. You can target all instances in an AWS
            account by specifying the `InstanceIds` key with a value of `*`\. To
            view a JSON and a YAML example that targets all instances, see
            "Create an association for all managed instances in an AWS account"
            on the Examples page\.
        WaitForSuccessTimeoutSeconds:
          type: integer
          description: >-
            The number of seconds the service should wait for the association
            status to show "Success" before proceeding with the stack
            execution\. If the association status doesn't show "Success" after
            the specified number of seconds, then stack creation fails\.
      required:
        - Name
    Document:
      type: object
      properties:
        Attachments:
          type: >-
            list of
            [attachmentssource](aws-properties-ssm-document-attachmentssource.md)
          description: >-
            A list of key\-value pairs that describe attachments to a version of
            a document\.
        Content:
          type: object
          description: >-
            The content for the new SSM document in JSON or YAML\. For more
            information about the schemas for SSM document content, see [SSM
            document schema features and
            examples](https://docs.aws.amazon.com/systems-manager/latest/userguide/document-schemas-features.html)
            in the *AWS Systems Manager User Guide*\.   This parameter also
            supports `String` data types\.
        DocumentFormat:
          type: string
          description: >-
            Specify the document format for the request\. JSON is the default
            format\.
        DocumentType:
          type: string
          description: The type of document to create\.
        Name:
          type: string
          description: >-
            A name for the SSM document\.   You can't use the following strings
            as document name prefixes\. These are reserved by AWS for use as
            document name prefixes:   +  `aws`  +  `amazon`  +  `amzn`
        Requires:
          type: >-
            list of
            [documentrequires](aws-properties-ssm-document-documentrequires.md)
          description: >-
            A list of SSM documents required by a document\. This parameter is
            used exclusively by AWS AppConfig\. When a user creates an AWS
            AppConfig configuration in an SSM document, the user must also
            specify a required document for validation purposes\. In this case,
            an `ApplicationConfiguration` document requires an
            `ApplicationConfigurationSchema` document for validation purposes\.
            For more information, see [What is AWS
            AppConfig?](https://docs.aws.amazon.com/appconfig/latest/userguide/what-is-appconfig.html)
            in the * AWS AppConfig User Guide*\.
        Tags:
          type: >-
            list of
            [tag](https://docs.aws.amazon.com/awscloudformation/latest/userguide/aws-properties-resource-tags.html)
          description: >-
            AWS CloudFormation resource tags to apply to the document\. Use tags
            to help you identify and categorize resources\.
        TargetType:
          type: string
          description: >-
            Specify a target type to define the kinds of resources the document
            can run on\. For example, to run a document on EC2 instances,
            specify the following value: `/AWS::EC2::Instance`\. If you specify
            a value of '/' the document can run on all types of resources\. If
            you don't specify a value, the document can't run on any resources\.
            For a list of valid resource types, see [AWS resource and property
            types
            reference](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html)
            in the *AWS CloudFormation User Guide*\.
        UpdateMethod:
          type: string
          description: >-
            If the document resource you specify in your template already
            exists, this parameter determines whether a new version of the
            existing document is created, or the existing document is replaced\.
            `Replace` is the default method\. If you specify `NewVersion` for
            the `UpdateMethod` parameter, and the `Name` of the document does
            not match an existing resource, a new document is created\. When you
            specify `NewVersion`, the default version of the document is changed
            to the newly created version\.
        VersionName:
          type: string
          description: >-
            An optional field specifying the version of the artifact you are
            creating with the document\. For example, `Release12.1`\. This value
            is unique across all versions of a document, and can't be changed\.
      required:
        - Content
    MaintenanceWindow:
      type: object
      properties:
        AllowUnassociatedTargets:
          type: boolean
          description: >-
            Enables a maintenance window task to run on managed instances, even
            if you have not registered those instances as targets\. If enabled,
            then you must specify the unregistered instances \(by instance ID\)
            when you register a task with the maintenance window\.
        Cutoff:
          type: integer
          description: >-
            The number of hours before the end of the maintenance window that
            AWS Systems Manager stops scheduling new tasks for execution\.
        Description:
          type: string
          description: A description of the maintenance window\.
        Duration:
          type: integer
          description: The duration of the maintenance window in hours\.
        EndDate:
          type: string
          description: >-
            The date and time, in ISO\-8601 Extended format, for when the
            maintenance window is scheduled to become inactive\.
        Name:
          type: string
          description: The name of the maintenance window\.
        Schedule:
          type: string
          description: >-
            The schedule of the maintenance window in the form of a cron or rate
            expression\.
        ScheduleOffset:
          type: integer
          description: >-
            The number of days to wait to run a maintenance window after the
            scheduled cron expression date and time\.
        ScheduleTimezone:
          type: string
          description: >-
            The time zone that the scheduled maintenance window executions are
            based on, in Internet Assigned Numbers Authority \(IANA\) format\.
        StartDate:
          type: string
          description: >-
            The date and time, in ISO\-8601 Extended format, for when the
            maintenance window is scheduled to become active\. StartDate allows
            you to delay activation of the Maintenance Window until the
            specified future date\.
        Tags:
          type: >-
            list of
            [tag](https://docs.aws.amazon.com/awscloudformation/latest/userguide/aws-properties-resource-tags.html)
          description: >-
            Optional metadata that you assign to a resource in the form of an
            arbitrary set of tags \(key\-value pairs\)\. Tags enable you to
            categorize a resource in different ways, such as by purpose, owner,
            or environment\. For example, you might want to tag a maintenance
            window to identify the type of tasks it will run, the types of
            targets, and the environment it will run in\.
      required:
        - AllowUnassociatedTargets
        - Cutoff
        - Duration
        - Name
        - Schedule
    MaintenanceWindowTarget:
      type: object
      properties:
        Description:
          type: string
          description: A description for the target\.
        Name:
          type: string
          description: The name for the maintenance window target\.
        OwnerInformation:
          type: string
          description: >-
            A user\-provided value that will be included in any Amazon
            CloudWatch Events events that are raised while running tasks for
            these targets in this maintenance window\.
        ResourceType:
          type: string
          description: >-
            The type of target that is being registered with the maintenance
            window\.
        Targets:
          type: >-
            [list](aws-properties-ssm-maintenancewindowtarget-targets.md) of
            [targets](aws-properties-ssm-maintenancewindowtarget-targets.md)
          description: >-
            The targets to register with the maintenance window\. In other
            words, the instances to run commands on when the maintenance window
            runs\.   You must specify targets by using the `WindowTargetIds`
            parameter\.
        WindowId:
          type: string
          description: The ID of the maintenance window to register the target with\.
      required:
        - ResourceType
        - Targets
        - WindowId
    MaintenanceWindowTask:
      type: object
      properties:
        CutoffBehavior:
          type: string
          description: >-
            The specification for whether tasks should continue to run after the
            cutoff time specified in the maintenance windows is reached\.
        Description:
          type: string
          description: A description of the task\.
        LoggingInfo:
          type: >-
            [logginginfo](aws-properties-ssm-maintenancewindowtask-logginginfo.md)
          description: >-
            Information about an Amazon S3 bucket to write Run Command
            task\-level logs to\.    `LoggingInfo` has been deprecated\. To
            specify an Amazon S3 bucket to contain logs for Run Command tasks,
            instead use the `OutputS3BucketName` and `OutputS3KeyPrefix` options
            in the `TaskInvocationParameters` structure\. For information about
            how Systems Manager handles these options for the supported
            maintenance window task types, see [AWS::SSM::MaintenanceWindowTask
            MaintenanceWindowRunCommandParameters](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssm-maintenancewindowtask-maintenancewindowruncommandparameters.html)\.
        MaxConcurrency:
          type: string
          description: >-
            The maximum number of targets this task can be run for, in
            parallel\.   Although this element is listed as "Required: No", a
            value can be omitted only when you are registering or updating a
            [targetless
            task](https://docs.aws.amazon.com/systems-manager/latest/userguide/maintenance-windows-targetless-tasks.html)
            You must provide a value in all other cases\.   For maintenance
            window tasks without a target specified, you can't supply a value
            for this option\. Instead, the system inserts a placeholder value of
            `1`\. This value doesn't affect the running of your task\.
        MaxErrors:
          type: string
          description: >-
            The maximum number of errors allowed before this task stops being
            scheduled\.   Although this element is listed as "Required: No", a
            value can be omitted only when you are registering or updating a
            [targetless
            task](https://docs.aws.amazon.com/systems-manager/latest/userguide/maintenance-windows-targetless-tasks.html)
            You must provide a value in all other cases\.   For maintenance
            window tasks without a target specified, you can't supply a value
            for this option\. Instead, the system inserts a placeholder value of
            `1`\. This value doesn't affect the running of your task\.
        Name:
          type: string
          description: The task name\.
        Priority:
          type: integer
          description: >-
            The priority of the task in the maintenance window\. The lower the
            number, the higher the priority\. Tasks that have the same priority
            are scheduled in parallel\.
        ServiceRoleArn:
          type: string
          description: >-
            The Amazon Resource Name \(ARN\) of the AWS Identity and Access
            Management \(IAM\) service role to use to publish Amazon Simple
            Notification Service \(Amazon SNS\) notifications for maintenance
            window Run Command tasks\.
        Targets:
          type: list of [target](aws-properties-ssm-maintenancewindowtask-target.md)
          description: >-
            The targets, either instances or window target IDs\.   + Specify
            instances using `Key=InstanceIds,Values=instanceid1,instanceid2 `\.
            + Specify window target IDs using
            `Key=WindowTargetIds,Values=window-target-id-1,window-target-id-2`\.
        TaskArn:
          type: string
          description: >-
            The resource that the task uses during execution\.   For
            `RUN_COMMAND` and `AUTOMATION` task types, `TaskArn` is the SSM
            document name or Amazon Resource Name \(ARN\)\.   For `LAMBDA`
            tasks, `TaskArn` is the function name or ARN\.   For
            `STEP_FUNCTIONS` tasks, `TaskArn` is the state machine ARN\.
        TaskInvocationParameters:
          type: >-
            [taskinvocationparameters](aws-properties-ssm-maintenancewindowtask-taskinvocationparameters.md)
          description: >-
            The parameters to pass to the task when it runs\. Populate only the
            fields that match the task type\. All other fields should be
            empty\.    When you update a maintenance window task that has
            options specified in `TaskInvocationParameters`, you must provide
            again all the `TaskInvocationParameters` values that you want to
            retain\. The values you do not specify again are removed\. For
            example, suppose that when you registered a Run Command task, you
            specified `TaskInvocationParameters` values for `Comment`,
            `NotificationConfig`, and `OutputS3BucketName`\. If you update the
            maintenance window task and specify only a different
            `OutputS3BucketName` value, the values for `Comment` and
            `NotificationConfig` are removed\.
        TaskParameters:
          type: object
          description: >-
            The parameters to pass to the task when it runs\.   
            `TaskParameters` has been deprecated\. To specify parameters to pass
            to a task when it runs, instead use the `Parameters` option in the
            `TaskInvocationParameters` structure\. For information about how
            Systems Manager handles these options for the supported maintenance
            window task types, see
            [MaintenanceWindowTaskInvocationParameters](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_MaintenanceWindowTaskInvocationParameters.html)\.
        TaskType:
          type: string
          description: >-
            The type of task\. Valid values: `RUN_COMMAND`, `AUTOMATION`,
            `LAMBDA`, `STEP_FUNCTIONS`\.
        WindowId:
          type: string
          description: The ID of the maintenance window where the task is registered\.
      required:
        - Priority
        - TaskArn
        - TaskType
        - WindowId
    Parameter:
      type: object
      properties:
        AllowedPattern:
          type: string
          description: >-
            A regular expression used to validate the parameter value\. For
            example, for String types with values restricted to numbers, you can
            specify the following: `AllowedPattern=^\d+$`
        DataType:
          type: string
          description: >-
            The data type of the parameter, such as `text` or `aws:ec2:image`\.
            The default is `text`\.
        Description:
          type: string
          description: Information about the parameter\.
        Name:
          type: string
          description: >-
            The name of the parameter\.   The maximum length constraint listed
            below includes capacity for additional system attributes that aren't
            part of the name\. The maximum length for a parameter name,
            including the full length of the parameter ARN, is 1011 characters\.
            For example, the length of the following parameter name is 65
            characters, not 20 characters:
            `arn:aws:ssm:us-east-2:111222333444:parameter/ExampleParameterName`
        Policies:
          type: string
          description: >-
            Information about the policies assigned to a parameter\.   
            [Assigning parameter
            policies](https://docs.aws.amazon.com/systems-manager/latest/userguide/parameter-store-policies.html)
            in the * AWS Systems Manager User Guide*\.
        Tags:
          type: object
          description: >-
            Optional metadata that you assign to a resource in the form of an
            arbitrary set of tags \(key\-value pairs\)\. Tags enable you to
            categorize a resource in different ways, such as by purpose, owner,
            or environment\. For example, you might want to tag a Systems
            Manager parameter to identify the type of resource to which it
            applies, the environment, or the type of configuration data
            referenced by the parameter\.
        Tier:
          type: string
          description: The parameter tier\.
        Type:
          type: string
          description: >-
            The type of parameter\.   AWS CloudFormation doesn't support
            creating a `SecureString` parameter type\.
        Value:
          type: string
          description: >-
            The parameter value\.   If type is `StringList`, the system returns
            a comma\-separated string with no spaces between commas in the
            `Value` field\.
      required:
        - Type
        - Value
    PatchBaseline:
      type: object
      properties:
        ApprovalRules:
          type: '[rulegroup](aws-properties-ssm-patchbaseline-rulegroup.md)'
          description: A set of rules used to include patches in the baseline\.
        ApprovedPatches:
          type: array
          description: >-
            A list of explicitly approved patches for the baseline\.   For
            information about accepted formats for lists of approved patches and
            rejected patches, see [About package name formats for approved and
            rejected patch
            lists](https://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-approved-rejected-package-name-formats.html)
            in the * AWS Systems Manager User Guide*\.
        ApprovedPatchesComplianceLevel:
          type: string
          description: >-
            Defines the compliance level for approved patches\. When an approved
            patch is reported as missing, this value describes the severity of
            the compliance violation\. The default value is `UNSPECIFIED`\.
        ApprovedPatchesEnableNonSecurity:
          type: boolean
          description: >-
            Indicates whether the list of approved patches includes
            non\-security updates that should be applied to the managed nodes\.
            The default value is `false`\. Applies to Linux managed nodes only\.
        Description:
          type: string
          description: A description of the patch baseline\.
        GlobalFilters:
          type: >-
            [patchfiltergroup](aws-properties-ssm-patchbaseline-patchfiltergroup.md)
          description: A set of global filters used to include patches in the baseline\.
        Name:
          type: string
          description: The name of the patch baseline\.
        OperatingSystem:
          type: string
          description: >-
            Defines the operating system the patch baseline applies to\. The
            default value is `WINDOWS`\.
        PatchGroups:
          type: array
          description: >-
            The name of the patch group to be registered with the patch
            baseline\.
        RejectedPatches:
          type: array
          description: >-
            A list of explicitly rejected patches for the baseline\.   For
            information about accepted formats for lists of approved patches and
            rejected patches, see [About package name formats for approved and
            rejected patch
            lists](https://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-approved-rejected-package-name-formats.html)
            in the * AWS Systems Manager User Guide*\.
        RejectedPatchesAction:
          type: string
          description: >-
            The action for Patch Manager to take on patches included in the
            `RejectedPackages` list\.   +  ** `ALLOW_AS_DEPENDENCY` **: A
            package in the `Rejected` patches list is installed only if it is a
            dependency of another package\. It is considered compliant with the
            patch baseline, and its status is reported as `InstalledOther`\.
            This is the default action if no option is specified\. +  ** `BLOCK`
            **: Packages in the `RejectedPatches` list, and packages that
            include them as dependencies, aren't installed under any
            circumstances\. If a package was installed before it was added to
            the Rejected patches list, it is considered non\-compliant with the
            patch baseline, and its status is reported as `InstalledRejected`\.
        Sources:
          type: >-
            list of
            [patchsource](aws-properties-ssm-patchbaseline-patchsource.md)
          description: >-
            Information about the patches to use to update the managed nodes,
            including target operating systems and source repositories\. Applies
            to Linux managed nodes only\.
        Tags:
          type: >-
            list of
            [tag](https://docs.aws.amazon.com/awscloudformation/latest/userguide/aws-properties-resource-tags.html)
          description: >-
            Optional metadata that you assign to a resource\. Tags enable you to
            categorize a resource in different ways, such as by purpose, owner,
            or environment\. For example, you might want to tag a patch baseline
            to identify the severity level of patches it specifies and the
            operating system family it applies to\.
      required:
        - Name
    ResourceDataSync:
      type: object
      properties:
        BucketName:
          type: string
          description: The name of the S3 bucket where the aggregated data is stored\.
        BucketPrefix:
          type: string
          description: An Amazon S3 prefix for the bucket\.
        BucketRegion:
          type: string
          description: >-
            The AWS Region with the S3 bucket targeted by the resource data
            sync\.
        KMSKeyArn:
          type: string
          description: >-
            The ARN of an encryption key for a destination in Amazon S3\. You
            can use a KMS key to encrypt inventory data in Amazon S3\. You must
            specify a key that exist in the same region as the destination
            Amazon S3 bucket\.
        S3Destination:
          type: >-
            [s3destination](aws-properties-ssm-resourcedatasync-s3destination.md)
          description: Configuration information for the target S3 bucket\.
        SyncFormat:
          type: string
          description: >-
            A supported sync format\. The following format is currently
            supported: JsonSerDe
        SyncName:
          type: string
          description: A name for the resource data sync\.
        SyncSource:
          type: '[syncsource](aws-properties-ssm-resourcedatasync-syncsource.md)'
          description: Information about the source where the data was synchronized\.
        SyncType:
          type: string
          description: >-
            The type of resource data sync\. If `SyncType` is
            `SyncToDestination`, then the resource data sync synchronizes data
            to an S3 bucket\. If the `SyncType` is `SyncFromSource` then the
            resource data sync synchronizes data from AWS Organizations or from
            multiple AWS Regions\.
      required:
        - SyncName
    ResourcePolicy:
      type: object
      properties:
        Policy:
          type: object
          description: A policy you want to associate with a resource\.
        ResourceArn:
          type: string
          description: >-
            Amazon Resource Name \(ARN\) of the resource to which you want to
            attach a policy\.
      required:
        - Policy
        - ResourceArn
paths: {}
